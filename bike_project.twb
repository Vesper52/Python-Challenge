<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.17.1226.1925                               -->
<workbook original-version='10.5' source-build='10.5.0 (10500.17.1226.1925)' source-platform='win' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.5'>
      <aliases enabled='yes' />
      <column caption='Start Date' datatype='datetime' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='#2013-07-01 00:00:00#'>
        <calculation class='tableau' formula='#2013-07-01 00:00:00#' />
        <range max='#2018-01-31 23:59:55#' min='#2013-07-01 00:00:00#' />
      </column>
      <column caption='End Date' datatype='datetime' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='#2015-07-17 04:46:40#'>
        <calculation class='tableau' formula='#2015-07-17 04:46:40#' />
        <range max='#2018-01-31 23:59:55#' min='#2013-07-01 00:00:00#' />
      </column>
    </datasource>
    <datasource caption='combined' inline='true' name='federated.089rfbz0bfb00e17s288z1b5ihon' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='combined' name='textscan.19zkqko1seagra1fhx0qf0yc2nwd'>
            <connection class='textscan' directory='C:/Users/bwiggins/Desktop/Trip_Data' filename='combined.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.19zkqko1seagra1fhx0qf0yc2nwd' name='combined.csv' table='[combined#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='tripduration' ordinal='0' />
            <column datatype='datetime' name='starttime' ordinal='1' />
            <column datatype='datetime' name='stoptime' ordinal='2' />
            <column datatype='integer' name='start station id' ordinal='3' />
            <column datatype='string' name='start station name' ordinal='4' />
            <column datatype='real' name='start station latitude' ordinal='5' />
            <column datatype='real' name='start station longitude' ordinal='6' />
            <column datatype='integer' name='end station id' ordinal='7' />
            <column datatype='string' name='end station name' ordinal='8' />
            <column datatype='real' name='end station latitude' ordinal='9' />
            <column datatype='real' name='end station longitude' ordinal='10' />
            <column datatype='integer' name='bikeid' ordinal='11' />
            <column datatype='string' name='usertype' ordinal='12' />
            <column datatype='string' name='birth year' ordinal='13' />
            <column datatype='integer' name='gender' ordinal='14' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[combined.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tripduration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tripduration]</local-name>
            <parent-name>[combined.csv]</parent-name>
            <remote-alias>tripduration</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>starttime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[starttime]</local-name>
            <parent-name>[combined.csv]</parent-name>
            <remote-alias>starttime</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stoptime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[stoptime]</local-name>
            <parent-name>[combined.csv]</parent-name>
            <remote-alias>stoptime</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[start station id]</local-name>
            <parent-name>[combined.csv]</parent-name>
            <remote-alias>start station id</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[start station name]</local-name>
            <parent-name>[combined.csv]</parent-name>
            <remote-alias>start station name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station latitude]</local-name>
            <parent-name>[combined.csv]</parent-name>
            <remote-alias>start station latitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station longitude]</local-name>
            <parent-name>[combined.csv]</parent-name>
            <remote-alias>start station longitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[end station id]</local-name>
            <parent-name>[combined.csv]</parent-name>
            <remote-alias>end station id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[end station name]</local-name>
            <parent-name>[combined.csv]</parent-name>
            <remote-alias>end station name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station latitude]</local-name>
            <parent-name>[combined.csv]</parent-name>
            <remote-alias>end station latitude</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station longitude]</local-name>
            <parent-name>[combined.csv]</parent-name>
            <remote-alias>end station longitude</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bikeid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bikeid]</local-name>
            <parent-name>[combined.csv]</parent-name>
            <remote-alias>bikeid</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>usertype</remote-name>
            <remote-type>129</remote-type>
            <local-name>[usertype]</local-name>
            <parent-name>[combined.csv]</parent-name>
            <remote-alias>usertype</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>birth year</remote-name>
            <remote-type>129</remote-type>
            <local-name>[birth year]</local-name>
            <parent-name>[combined.csv]</parent-name>
            <remote-alias>birth year</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[combined.csv]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total_Rides' datatype='integer' name='[Calculation_1339539451484573696]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='count([birth year])' />
      </column>
      <column caption='Customer_Count' datatype='integer' name='[Calculation_1339539451491135489]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(INT([usertype] = &apos;Customer&apos;))' />
      </column>
      <column caption='Subscriber_Count' datatype='integer' name='[Calculation_1339539451493117955]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(INT([usertype] =&apos;Subscriber&apos;))' />
      </column>
      <column caption='Male_Count' datatype='integer' name='[Calculation_617556136459292673]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(INT([gender] = 1))' />
      </column>
      <column caption='Female_Count' datatype='integer' name='[Calculation_617556136461750274]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(INT([gender] = 2))' />
      </column>
      <column caption='Distance in Miles' datatype='real' name='[Calculation_617556136822431747]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ACOS(COS(RADIANS(90-[start station latitude])) *COS(RADIANS(90-[end station latitude])) +SIN(RADIANS(90-[start station latitude])) *SIN(RADIANS(90-[end station latitude])) *COS(RADIANS([start station longitude]-[end station longitude]))) *6371' />
      </column>
      <column caption='Count of Station Uses' datatype='integer' name='[Calculation_617556136833126404]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([start station id])' />
      </column>
      <column caption='All Stations Longitude' datatype='real' name='[Calculation_617556136835149830]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[start station longitude]+[end station longitude]' />
      </column>
      <column caption='All Stations Latitude' datatype='real' name='[Calculation_617556136835420167]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[start station latitude]+[end station latitude]' />
      </column>
      <column caption='Count of End Stations' datatype='integer' name='[Calculation_617556136845070344]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([end station id])' />
      </column>
      <column caption='Relative Date' datatype='integer' name='[Calculation_617556136863535115]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEDIFF(&apos;month&apos;,[starttime],TODAY())' />
      </column>
      <column caption='Date Range' datatype='boolean' name='[Calculation_617556136865767436]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[starttime]&gt;= [Parameters].[Parameter 1] AND [starttime] &lt;= [Parameters].[Parameter 2]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
      <column caption='Birth Year' datatype='string' name='[birth year]' role='dimension' type='nominal' />
      <column caption='End Station Id' datatype='integer' name='[end station id]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
      <column caption='Gender' datatype='integer' name='[gender]' role='measure' type='quantitative' />
      <column caption='Start Station Id' datatype='integer' name='[start station id]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
      <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
      <column caption='Stoptime' datatype='datetime' name='[stoptime]' role='dimension' type='ordinal' />
      <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
      <column caption='Usertype' datatype='string' name='[usertype]' role='dimension' type='nominal' />
      <column-instance column='[starttime]' derivation='Hour' name='[hr:starttime:ok]' pivot='key' type='ordinal' />
      <column-instance column='[end station name]' derivation='None' name='[none:end station name:nk]' pivot='key' type='nominal' />
      <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
      <column-instance column='[starttime]' derivation='Year' name='[yr:starttime:ok]' pivot='key' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.260756' measure-ordering='alphabetic' measure-percentage='0.644068' parameter-percentage='0.095176' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[hr:starttime:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2013</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2018</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>2017</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2016</bucket>
            </map>
            <map to='#edc948'>
              <bucket>%null%</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2014</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:end station name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;1 Ave &amp; E 78 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;21 St &amp; 38 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;3 Ave &amp; Schermerhorn St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;31 Ave &amp; 34 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;37 St &amp; 24 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;6 Ave &amp; Broome St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;9 Ave &amp; W 22 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Adventures NYC&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baldwin at Montgomery&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bike in Movie Night | Prospect Park Bandshell&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Broadway &amp; W 32 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cadman Plaza E &amp; Red Cross Pl&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Center Blvd &amp; Borden Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clermont Ave &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Columbus Ave &amp; W 95 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dean St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Duffield St &amp; Willoughby St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 103 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 12 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 33 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 48 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 65 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 81 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eckford St &amp; Engert Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 129 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Graham Ave &amp; Grand St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Grove St PATH&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Howard St &amp; Centre St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kent Ave &amp; N 7 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lenox Ave &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lexington Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Marcy Ave &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montgomery St &amp; Franklin Ave OLD&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nassau St &amp; Navy St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NYCBS Depot - RIS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pearl St &amp; Anchorage Pl&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pleasant Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Riverside Dr &amp; W 91 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sigourney St &amp; Columbia St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;State St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Union St &amp; Nevins St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 113 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 14 St &amp; The High Line&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 27 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 46 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 76 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Watts St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;11 St &amp; 43 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;2 Ave &amp; E 105 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;28 Ave &amp; 35 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;34 Ave &amp; 38 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;5 Ave &amp; E 88 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;78 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;8 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ashland Pl &amp; Hanson Pl&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bedford Ave &amp; S 9th St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Broadway &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Broadway &amp; W 60 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Carroll St &amp; Bond St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Centre St &amp; Worth St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Coffey St &amp; Conover St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Crescent St &amp; 30 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Division Ave &amp; Marcy Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 118 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 23 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 43 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 56 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 7 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 76 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 91 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Forsyth St &amp; Canal St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fulton St &amp; Waverly Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenpoint Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Henry St &amp; Bay St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jay St &amp; Tech Pl&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lafayette St &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lewis Ave &amp; Kosciuszko St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madison Ave &amp; E 82 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Milton St &amp; Franklin St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;N 6 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nostrand Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Park Ave &amp; E 124 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pier 40 - Hudson River Park&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Richards St &amp; Delavan St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sands St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St Johns Pl &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Underhill Ave &amp; Lincoln Pl&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Verona Pl &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 21 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 42 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 56 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 95 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Washington Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;WS Don&apos;t Use&quot;</bucket>
            </map>
            <map to='#55007f'>
              <bucket>&quot;Christ Hospital&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;1 Ave &amp; E 30 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;14 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;28 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;3 Ave &amp; E 71 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;35 St &amp; 34 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;5 Corners Library&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;8D QC Station 01&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 118 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Atlantic Ave &amp; Furman St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Berkeley Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Broadway &amp; Roebling St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brunswick St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Carroll St &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Church St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Columbia St &amp; Lorraine St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Crescent St &amp; Ditmars Blvd&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Douglass St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 11 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 27 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 47 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 59 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 78 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 97 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E.T. Bike-In Movie Valet Station &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Franklin St &amp; Dupont St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gold St &amp; Frankfort St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greenwich St &amp; N Moore St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Henry St &amp; W 9 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;John St &amp; William St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Laight St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lexington Ave &amp; E 26 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madison St &amp; Montgomery St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Monroe St &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;N 15 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NYCBS Depot - FAR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Park Pl &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pioneer St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Riverside Dr &amp; W 72 St &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Schermerhorn St &amp; Court St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St. Nicholas Ave &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Union Ave &amp; Wallabout St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 106 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 13 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 25 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 44 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 64 St &amp; West End Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Washington Square E&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;York St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;10 Ave &amp; W 28 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;2 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;21 St &amp; Queens Plaza North&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;3 St &amp; Prospect Park West&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;31 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;44 Dr &amp; 21 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;6 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Allen St &amp; Rivington St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Banker St &amp; Meserole Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bond St &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broadway &amp; W 39 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cambridge Pl &amp; Gates Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central Park W &amp; W 96 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Clinton Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Communipaw &amp; Berry Lane&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DeKalb Ave &amp; S Portland Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 109 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 15 St &amp; Irving Pl&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 2 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 37 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 52 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 68 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 84 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;end station name&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Frost St &amp; Meeker St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grand Army Plaza &amp; Plaza St West&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hanover Pl &amp; Livingston St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Humboldt St &amp; Varet St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kiosk in a box Deployment&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Leonard St &amp; Bayard St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lincoln Pl &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;McGuinness Blvd &amp; Eagle St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Morris Canal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Newton Rd &amp; 44 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NYCBS Depot - STY - Valet Scan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Penn Station Valet&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prospect Pl &amp; Underhill Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rivington St &amp; Ridge St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South End Ave &amp; Liberty St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sterling Pl &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Van Dyke St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 129 St &amp; Convent Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 16 St &amp; The High Line&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 34 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 51 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 84 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;1 Ave &amp; E 94 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;21 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;3 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;31 Ave &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;39 St &amp; 2 Ave - Citi Bike HQ at Industry City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;6 Ave &amp; Canal St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;9 Ave &amp; W 28 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Albany Ave &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Baltic St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bike The Branches - Central Branch&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Broadway &amp; W 36 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cadman Plaza E &amp; Tillary St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Center Blvd &amp; Borden Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clermont Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Columbus Ave &amp; W 103 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Degraw St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dwight St &amp; Van Dyke St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 106 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 13 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 33 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 48 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 66 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 82 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Elizabeth St &amp; Hester St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Front St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Graham Ave &amp; Herbert St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Halsey St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hoyt St &amp; Warren St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kent Ave &amp; S 11 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lenox Ave &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lexington Ave &amp; E 127 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Marcy Ave &amp; MacDonough St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montrose Ave &amp; Bushwick Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Newark Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NYCBS Depot - SSP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pearl St &amp; Hanover Square&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;President St &amp; Henry St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Riverside Dr &amp; W 104 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Smith St &amp; 3 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;State St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;University Pl &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 116 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 15 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 29 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 47 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 78 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;West Drive &amp; Prospect Park West&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;1 Ave &amp; E 44 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;19 St &amp; 24 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;3 Ave &amp; E 72 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;30 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;35 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;5 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;9 Ave &amp; W 14 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 123 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Avenue D &amp; E 3 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Berkeley Pl &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Broadway &amp; W 24 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bus Slip &amp; State St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cathedral Pkwy &amp; Broadway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;City Hall&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Columbia St &amp; Rivington St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Crown St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Driggs Ave &amp; Lorimer St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 11 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 30 St &amp; Park Ave S&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 47 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 59 St &amp; Sutton Pl&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 80 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 98 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East End Ave &amp; E 86 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Franklin St &amp; W Broadway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GOW Tech Shop&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greenwich St &amp; North Moore St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hicks St &amp; Montague St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Johnson St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lawrence St &amp; Willoughby St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lexington Ave &amp; E 29 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Maiden Ln &amp; Pearl St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monroe St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;N Henry St &amp; Richardson St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NYCBS Depot - GOW&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Park Pl &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pitt St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Riverside Dr &amp; W 78 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Scholes St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Stagg St &amp; Union Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Union St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 106 St &amp; Central Park West&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 13 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 26 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 45 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 67 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington St &amp; Gansevoort St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;York St &amp; Jay St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;11 Ave &amp; W 59 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;2 Ave  &amp; E 104 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;27 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;34 Ave &amp; 13 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;48 Ave &amp; 30 Pl&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;5 Ave &amp; E 73 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;8 Ave &amp; W 31 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Amsterdam Ave &amp; W 119 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bedford Ave &amp; Nassau Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Broadway &amp; Battery Pl&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Broadway &amp; W 56 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Carroll St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central Park West &amp; W 102 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Clinton St &amp; Tillary St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Court St &amp; Nelson St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ditmars Blvd &amp; 19 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 118 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 20 St &amp; FDR Drive&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 41 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 55 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 6 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 74 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 89 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Flushing Ave &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fulton St &amp; Utica Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greene Ave &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Heights Elevator&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jackson Ave &amp; 46 Rd&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lafayette Ave &amp; St James Pl&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Leonard St &amp; Meeker Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MacDougal St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Metropolitan Ave &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Myrtle Ave &amp; Marcy Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Moore St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pacific St &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pershing Square South&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Reade St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;S 5 Pl &amp; S 4 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St James Pl &amp; Oliver St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Throop Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vernon Blvd &amp; 47 Rd&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 20 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 39 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 54 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 90 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Warren St &amp; Court St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Willoughby St &amp; Fleet St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1 Ave &amp; E 15 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;12 Ave &amp; W 40 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;2 Ave &amp; E 122 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;28 St &amp; 36 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;333 Johnson TEST 1&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;34 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;5 Ave &amp; E 93 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;8 Ave &amp; W 52 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Astor Place&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bergen St &amp; Flatbush Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Broadway &amp; E 22 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Broadway &amp; W 122 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Carroll St &amp; Columbia St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cherry St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Columbia Heights &amp; Cranberry St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Crescent St &amp; 34 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Division St &amp; Bowery&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 118 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 24 St &amp; Park Ave S&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 43 St &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 58 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 76 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 9 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 93 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Franklin Ave &amp; Empire Blvd&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fulton St &amp; William St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greenwich Ave &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Henry St &amp; Degraw St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;JC Medical Center&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lafayette St &amp; Jersey St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lewis Ave &amp; Madison St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madison Ave &amp; E 99 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mobile 01&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;N 8 St &amp; Driggs Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NYCBS Depot - DEL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Park Ave &amp; Marcus Garvey Blvd&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pike St &amp; E Broadway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Richardson St &amp; N Henry St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sands St &amp; Navy St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St Marks Pl &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Underhill Ave &amp; Pacific St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vesey Pl &amp; River Terrace&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 100 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 22 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 42 St &amp; Dyer Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 56 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Washington Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wyckoff St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#aa0000'>
              <bucket>&quot;Broadway &amp; E 22 St - Valet Scan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;11 Ave &amp; W 27 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;2 Ave &amp; E 96 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;24 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;31 St &amp; Northern Blvd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;47 Ave &amp; 31 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;5 Ave &amp; E 29 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;7 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Amsterdam Ave &amp; W 79 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bayard St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Broad St &amp; Bridge St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Broadway &amp; W 53 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Carlton Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central Park West &amp; W 85 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Clinton St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cooper Square &amp; Astor Pl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Devoe St &amp; Lorimer St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 115 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 19 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 4 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 40 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 55 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 72 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 88 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;FDR Drive &amp; E 35 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fulton St &amp; Grand Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grand St &amp; Havemeyer St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Harborside&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;India St &amp; West St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lafayette Ave &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Leonard St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LPI Facility&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mercer St &amp; Spring St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Murray St &amp; West St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norman Ave &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PABT Valet&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pershing Square North&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Queens Plaza North &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;S 4 St &amp; Rodney St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SSP - Basement&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sullivan Pl &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vernon Blvd &amp; 31 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 18 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 37 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 52 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 88 St &amp; West End Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Warren St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Willoughby Ave &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;1 Ave &amp; E 62 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;21 St &amp; 31 Dr&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;3 Ave &amp; E 100 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;31 Ave &amp; 14 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;36 Ave &amp; 10 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;6 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;9 Ave &amp; W 16 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Avenue D &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Berry St &amp; N 8 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Broadway &amp; W 25 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bushwick Ave &amp; Powers St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Catherine St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clark St &amp; Henry St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Columbia St &amp; W 9 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cumberland St &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Driggs Ave &amp; N Henry St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 102 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 11 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 31 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 47 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 60 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 81 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eastern Pkwy &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 112 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gowanus Tech Station&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenwich St &amp; W Houston St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hilltop&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Joralemon St &amp; Adams St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lefferts Pl &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lexington Ave &amp; E 63 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Manila &amp; 1st&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montague St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nassau Ave &amp; Newell St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NYCBS Depot - GOW Annex&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pathmark Depot&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Plaza St West &amp; Flatbush Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Riverside Dr &amp; W 82 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Shevchenko Pl &amp; E 6 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stanton St &amp; Chrystie St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Union St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 107 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 13 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 26 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 45 St &amp; 6 Ave (1)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 70 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Washington Street (Don&apos;t Use)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;10 Hudson Yards&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;2 Ave &amp; 36 St - Citi Bike HQ at Industry City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;23 Ave &amp; 27 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;31 St &amp; Astoria Blvd&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;4 Ave &amp; 2 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;44 Dr &amp; Jackson Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;7 Ave &amp; Farragut St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Allen St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Barclay St &amp; Church St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bond St &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broadway &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Canal St &amp; Rutgers St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central Park West &amp; W 68 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Clinton Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Concord St &amp; Bridge St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DeKalb Ave &amp; Skillman St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 110 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 16 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 2 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 39 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 53 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 68 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 85 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Essex Light Rail&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fulton St &amp; Adams St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand Ave &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hanson Pl &amp; Ashland Pl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Huron St &amp; Franklin St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kiosk in a box Motivate&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Leonard St &amp; Boerum St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lispenard St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;McKibbin St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mott St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Newtown Ave &amp; 23 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NYCBS Depot BAL - DYR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Penn Station Valet - Valet Scan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pulaski St &amp; Marcus Garvey Blvd&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Roebling St &amp; N 4 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South St &amp; Gouverneur Ln&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sterling Pl &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Van Vorst Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 17 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 36 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 52 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 87 St  &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W Broadway &amp; Spring St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Thames St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;10 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;2 Ave &amp; E 31 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;24 Ave &amp; 26 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;31 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;4 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;45 Rd &amp; 11 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;7 Ave &amp; Park Pl&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Amsterdam Ave &amp; W 66 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barrow St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bond St &amp; Schermerhorn St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Broadway &amp; W 49 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Carlton Ave &amp; Dean St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central Park West &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Clinton St &amp; 4 Place&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Congress St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DeKalb Ave &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 114 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 16 St &amp; Irving Pl&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 2 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 39 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 53 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 71 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 85 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Exchange Place&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fulton St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grand St &amp; Elizabeth St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hanson Pl &amp; St Felix St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;India St &amp; East River&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kosciuszko St &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Leonard St &amp; Church St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Little West St &amp; 1 Pl&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mercer St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mt Morris Park W &amp; W 120 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NJCU&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Old Fulton St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Perry St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Putnam Ave &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rogers Ave &amp; Sterling St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South St &amp; Whitehall St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sterling St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vernon Blvd &amp; 10 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 17 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 37 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 52 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 87 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W Broadway &amp; Spring Street&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;William St &amp; Pine St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;11 Ave &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;2 Ave &amp; E 99 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;27 Ave &amp; 4 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;31 St &amp; Thomson Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;48 Ave &amp; 5 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;5 Ave &amp; E 63 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;8 Ave &amp; W 16 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Amsterdam Ave &amp; W 82 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bedford Ave &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Broadway &amp; 12 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Broadway &amp; W 55 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Carmine St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Central Park West &amp; W 100 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Clinton St &amp; Joralemon St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cooper Square &amp; E 7 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dey St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 116 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 20 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 41 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 5 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 55 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 72 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 89 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Flushing Ave &amp; Carlton Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fulton St &amp; Rockwell Pl&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Great Jones St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Harrison St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Industry City, Building 1 Basement&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lafayette Ave &amp; Fort Greene Pl&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Leonard St &amp; Maujer St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MacDougal St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Meserole Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myrtle Ave &amp; Lewis Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Norman Ave &amp; Leonard St - 2&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pacific St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pershing Square S&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Railroad Ave &amp; Kay Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;S 4 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SSP Tech Workshop&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sullivan St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vernon Blvd &amp; 41 Rd&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 20 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 38 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 53 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 89 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Warren St &amp; Church St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Willoughby Ave &amp; Walworth St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;11 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;2 Ave &amp; E 104 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;27 St &amp; Hunter St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;34 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;49 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;5 Ave &amp; E 78 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;8 Ave &amp; W 31 St N&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Amsterdam Ave &amp; W 125 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bedford Ave &amp; S 9 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Broadway &amp; Berry St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Broadway &amp; W 58 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Carroll St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Centre St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Clinton St &amp; Union St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Court St &amp; State St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Division Ave &amp; Hooper St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 118 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 20 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 42 St &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 56 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 6 St &amp; Avenue D&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 75 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 91 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Forsyth St &amp; Broome St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fulton St &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greene Ave &amp; Throop Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Henry St &amp; Atlantic Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jackson St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lafayette Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lewis Ave &amp; Decatur St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Macon St &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Metropolitan Ave &amp; Meeker Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Myrtle Ave &amp; St Edwards St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pacific St &amp; Nevins St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Picnic Point&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Reed St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;S Portland Ave &amp; Hanson Pl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St James Pl &amp; Pearl St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tompkins Ave &amp; Hopkins St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vernon Blvd &amp; 50 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 20 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 41 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 55 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 92 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Washington Ave &amp; Greene Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wolcott St &amp; Dwight St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;1 Ave &amp; E 110 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;21 St &amp; 43 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;3 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;31 Ave &amp; Steinway St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;40 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;6 Ave &amp; Spring St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;9 Ave &amp; W 45 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Allen St &amp; E Houston St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bank St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bike The Branches - Red Hook Branch&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Broadway &amp; W 37 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cadman Plaza W &amp; Pierrepont St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central Park North &amp; Adam Clayton Powell Blvd&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cleveland Pl &amp; Spring St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Columbus Drive&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Degraw St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 106 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 14 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 2 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 33 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 51 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 67 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 82 St &amp; East End Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Emerson Pl &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Front St &amp; Maiden Ln&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Graham Ave &amp; Withers St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hamilton Park&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hs Don&apos;t Use&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;KentAve&amp;N7 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lenox Ave &amp; W 130 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liberty Light Rail&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marin Light Rail&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morningside Ave &amp; W 123 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Newport PATH&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NYCBS Depot - STY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Peck Slip &amp; Front St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prospect Park West &amp; 8 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Riverview Park&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Smith St &amp; 9 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Steinway St &amp; 23 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;University Pl &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 116 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 15 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 31 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 49 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 82 St &amp; Central Park West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;West End Ave &amp; W 94 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;1 Ave &amp; E 68 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;21 St &amp; 36 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;3 Ave &amp; E 112 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;31 Ave &amp; 30 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;37 Ave &amp; 35 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;6 Ave &amp; 12 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;9 Ave &amp; W 18 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Adelphi St &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Avenue D &amp; E 12 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bialystoker Pl &amp; Delancey St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Broadway &amp; W 29 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Butler St &amp; Court St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Center Blvd &amp; 48 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Classon Ave &amp; St Marks Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Columbus Ave &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dean St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Duane St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 102 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 12 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 32 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 48 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 61 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 81 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eastern Pkwy &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 117 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Graham Ave &amp; Conselyea St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greenwich St &amp; Warren St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hope St &amp; Union Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kane St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lenox Ave &amp; W 111 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lexington Ave &amp; E 111 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marcus Garvey Blvd &amp; Macon St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montgomery St &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nassau Ave &amp; Russell St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NYCBS Depot - PIT&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paulus Hook&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pleasant Ave &amp; E 116 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Riverside Dr &amp; W 89 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Shevchenko Pl &amp; E 7 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stanton St &amp; Mangin St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Union St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 110 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 13 St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 27 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 45 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 74 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Water - Whitehall Plaza&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1 Ave &amp; E 16 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;12 St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;28 St &amp; 38 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;3 Ave &amp; 14 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;35 Ave &amp; 10 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;3969.TEMP (Bike The Branches - Central Branch)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;5 Ave &amp; E 103 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;8D Mobile 01&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Astoria Park S &amp; Shore Blvd&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bergen St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Broadway &amp; Whipple St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Carroll St &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Columbia St &amp; Degraw St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Crescent St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dixon Mills&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 10 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 123 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 25 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 44 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 58 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 77 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 95 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Franklin Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gallatin Pl &amp; Livingston St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenwich Ave &amp; Charles St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Henry St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey &amp; 3rd&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lafayette St &amp; Jersey St N&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lexington Ave &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Madison Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Monmouth and 6th&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;N 11 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NYCBS DEPOT - DELANCEY&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Park Ave &amp; St Edwards St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pike St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Riverside Blvd &amp; W 67 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Schermerhorn St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St Marks Pl &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Union Ave &amp; Jackson St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 100 St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 22 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 4 St &amp; 7 Ave S&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 43 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 59 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Washington Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wythe Ave &amp; Metropolitan Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;10 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;2 Ave &amp; E 58 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;24 Ave &amp; 29 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;31 St &amp; Hoyt Ave N&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;46 Ave &amp; 5 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;5 Ave &amp; 3 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;7 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Amsterdam Ave &amp; W 73 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bayard St &amp; Baxter St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bressler&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Broadway &amp; W 51 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Carlton Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Central Park West &amp; W 76 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Clinton St &amp; Centre St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Convent Ave &amp; W 129 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Devoe St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 115 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 17 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 3 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 40 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 53 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 71 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 88 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Expansion Warehouse 333 Johnson Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fulton St &amp; Clermont Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Grand St &amp; Greene St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Harborsid&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;India St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kosciuszko St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Leonard St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lorimer St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mercer St &amp; Bleecker St S&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Murray St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norfolk St &amp; Broome St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Old Slip &amp; Front St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pershing Square N&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Putnam Ave &amp; Throop Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;S 3 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spruce St &amp; Nassau St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Suffolk St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vernon Blvd &amp; 30 Rd&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 18 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 37 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 52 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 87 St &amp; West End Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W Houston St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Willoughby Ave &amp; Hall St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;1 Pl &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;21 St &amp; Hoyt Ave S&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;3 St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;31 St &amp; 23 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;43 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;6 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;9 St &amp; 44 Rd&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Allen St &amp; Hester St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bank St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Boerum St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Broadway &amp; W 38 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cadman Plaza West &amp; Montague St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central Park S &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cliff St &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Commerce St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DeKalb Ave &amp; Hudson Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 106 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 15 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 2 St &amp; 2 Ave E&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 35 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 51 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 67 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 84 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;End Station Name&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Front St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grand Army Plaza &amp; Central Park S&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hancock St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hudson St &amp; Reade St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kingston Ave &amp; Herkimer St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Leonard Gordon Park&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liberty St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Market St &amp; Cherry St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morningside Dr &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Newport Pkwy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NYCBS Depot - STY - Garage 4&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peck Slip &amp; Front Street&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prospect Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rivington St &amp; Chrystie St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Soissons Landing&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Steinway St &amp; 28 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Van Brunt St &amp; Wolcott St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 120 St &amp; Claremont Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 16 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 33 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 49 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 84 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;West End Ave &amp; W 107 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;1 Ave &amp; E 18 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;14 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;28 St &amp; 40 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;3 Ave &amp; E 62 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;35 Ave &amp; 37 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;5 Ave &amp; E 126 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;8D OPS 01&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Atlantic Ave &amp; Fort Greene Pl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bergen St &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Broadway &amp; Moylan Pl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brooklyn Bridge Park - Pier 2&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Carroll St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Christopher St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Columbia St &amp; Kane St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Crescent St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Douglass St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 10 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 128 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 25 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 45 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 58 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 77 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 97 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Franklin Ave &amp; St Marks Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Garfield Pl &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenwich St &amp; Hubert St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Henry St &amp; Poplar St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jersey &amp; 6th St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LaGuardia Pl &amp; W 3 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lexington Ave &amp; E 24 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Madison St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Monroe St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;N 12 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NYCBS Depot - DYR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Park Pl &amp; Church St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pioneer St &amp; Richards St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Riverside Dr &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Schermerhorn St &amp; Bond St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St Nicholas Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Union Ave &amp; N 12 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 104 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 11 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 24 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 43 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 63 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Washington Pl &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yankee Ferry Terminal&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:start station name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;1 Ave &amp; E 62 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;10 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;28 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;3 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;43 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;6 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Amsterdam Ave &amp; W 82 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bedford Ave &amp; S 9 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Broadway &amp; Roebling St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bus Slip &amp; State St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Center Blvd &amp; Borden Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cliff St &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Concord St &amp; Bridge St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Devoe St &amp; Lorimer St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 20 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 43 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 58 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 6 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 77 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 97 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eastern Pkwy &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Front St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Grand Army Plaza &amp; Plaza St West&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Henry St &amp; Atlantic Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Johnson St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lenox Ave &amp; W 130 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lispenard St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Metropolitan Ave &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;N 12 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pacific St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Picnic Point&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Reed St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sands St &amp; Navy St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;St Marks Pl &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Union Ave &amp; Wallabout St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 120 St &amp; Claremont Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 15 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 29 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 49 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 82 St &amp; Central Park West&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1 Ave &amp; E 68 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;2 Ave &amp; E 105 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;21 St &amp; Queens Plaza North&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;3 Ave &amp; 14 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;34 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;5 Ave &amp; E 103 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;9 Ave &amp; W 18 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Albany Ave &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bank St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bond St &amp; Schermerhorn St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Broadway &amp; W 53 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Carroll St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cherry St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Columbia St &amp; Kane St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dean St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 115 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 14 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 2 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 53 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 71 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 88 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Franklin Ave &amp; St Marks Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Garfield Pl &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenwich St &amp; N Moore St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;India St &amp; East River&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Laight St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lexington Ave &amp; E 24 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marcus Garvey Blvd &amp; Macon St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Murray St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NYCBS Depot - PIT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Peck Slip &amp; Front Street&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prospect Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Roebling St &amp; N 4 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South St &amp; Gouverneur Ln&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Suffolk St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vesey Pl &amp; River Terrace&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 104 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 22 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 42 St &amp; Dyer Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 59 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Washington Square E&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;27 St &amp; Hunter St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;3 Ave &amp; E 100 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;36 Ave &amp; 10 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;6 Ave &amp; 12 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;9 St &amp; 44 Rd&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Allen St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bayard St &amp; Baxter St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Broadway &amp; Berry St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Broadway &amp; W 60 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Carroll St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Classon Ave &amp; St Marks Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cleveland Pl &amp; Spring St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Columbus Ave &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cumberland St &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DeKalb Ave &amp; S Portland Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 118 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 2 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 35 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 40 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 55 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 74 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 91 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Expansion Tech Station&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 117 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Graham Ave &amp; Grand St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hancock St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jackson Ave &amp; 46 Rd&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lefferts Pl &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lexington Ave &amp; E 111 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;McKibbin St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Myrtle Ave &amp; St Edwards St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NYCBS Depot - STY - Garage 4&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pershing Square N&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Putnam Ave &amp; Throop Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;S 4 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Underhill Ave &amp; Lincoln Pl&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 110 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 13 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 26 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 45 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 70 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;West Drive &amp; Prospect Park West&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;3969.TEMP (Bike The Branches - Central Branch)&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Broadway &amp; E 22 St&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Central Park West &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;1 Ave &amp; E 110 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;2 Ave &amp; 36 St - Citi Bike HQ at Industry City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;31 Ave &amp; 34 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;4 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;46 Ave &amp; 5 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;7 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Astoria Park S &amp; Shore Blvd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bergen St &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broadway &amp; W 32 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cadman Plaza E &amp; Tillary St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central Park West &amp; W 68 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Clinton St &amp; Centre St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Court St &amp; Nelson St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Division St &amp; Bowery&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 10 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 103 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 25 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 47 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 59 St &amp; Sutton Pl&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 81 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Emerson Pl &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fulton St &amp; Clermont Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grand St &amp; Havemeyer St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Henry St &amp; Poplar St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kent Ave &amp; S 11 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Leonard St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MacDougal St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Monroe St &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nassau St &amp; Navy St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Park Ave &amp; Marcus Garvey Blvd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pioneer St &amp; Richards St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Riverside Dr &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Scholes St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stanton St &amp; Chrystie St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;University Pl &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 17 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 36 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 52 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 87 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W Houston St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Willoughby Ave &amp; Walworth St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;1 Ave &amp; E 78 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;11 Ave &amp; W 27 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;3 St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;30 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;44 Dr &amp; 21 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;6 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Amsterdam Ave &amp; W 119 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bedford Ave &amp; S 9th St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Broadway &amp; W 24 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bushwick Ave &amp; Powers St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Park North &amp; Adam Clayton Powell Blvd&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clinton Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Congress St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ditmars Blvd &amp; 19 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 23 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 43 St &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 58 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 6 St &amp; Avenue D&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 78 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 98 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eastern Pkwy &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Frost St &amp; Meeker St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Grand Ave &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Henry St &amp; Bay St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Joralemon St &amp; Adams St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Leonard St &amp; Bayard St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Little West St &amp; 1 Pl&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Metropolitan Ave &amp; Meeker Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;N 15 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pacific St &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pier 40 - Hudson River Park&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Richards St &amp; Delavan St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Schermerhorn St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St Nicholas Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Union St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 129 St &amp; Convent Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 15 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 31 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 49 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 84 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;William St &amp; Pine St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;1 Ave &amp; E 18 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;10 Ave &amp; W 28 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;28 Ave &amp; 35 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;3 Ave &amp; E 112 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;37 Ave &amp; 35 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;6 Ave &amp; Broome St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Amsterdam Ave &amp; W 66 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bayard St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Broadway &amp; W 122 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Broadway &amp; W 36 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cathedral Pkwy &amp; Broadway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clermont Ave &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Columbus Ave &amp; W 95 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DeKalb Ave &amp; Skillman St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 118 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 19 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 3 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 41 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 55 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 75 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 93 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 129 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Graham Ave &amp; Herbert St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hanover Pl &amp; Livingston St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jackson St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lenox Ave &amp; W 111 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lexington Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mercer St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;N 6 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NYCBS Depot BAL - DYR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Putnam Ave &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Queens Plaza North &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;S 5 Pl &amp; S 4 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St James Pl &amp; Pearl St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Underhill Ave &amp; Pacific St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 113 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 13 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 47 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 74 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;West End Ave &amp; W 94 St&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;NYCBS DEPOT - DELANCEY&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;W 13 St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;W 21 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;2 Ave &amp; E 104 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;21 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;34 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;5 Ave &amp; E 88 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;9 Ave &amp; W 14 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 123 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Baltic St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bond St &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Broadway &amp; W 49 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Carlton Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Centre St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Columbia Heights &amp; Cranberry St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Duffield St &amp; Willoughby St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 114 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 12 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 33 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 51 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 68 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 85 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Franklin Ave &amp; Empire Blvd&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fulton St &amp; William St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greenwich Ave &amp; Charles St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Humboldt St &amp; Varet St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lafayette Ave &amp; St James Pl&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lewis Ave &amp; Madison St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Madison St &amp; Montgomery St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mott St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nostrand Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pearl St &amp; Hanover Square&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;President St &amp; Henry St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rivington St &amp; Chrystie St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Soissons Landing&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sterling Pl &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vernon Blvd &amp; 50 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 100 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 20 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 41 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 56 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Washington Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;York St &amp; Jay St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1 Ave &amp; E 15 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;24 Ave &amp; 26 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;3 Ave &amp; E 62 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;35 Ave &amp; 37 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;5 Ave &amp; E 126 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;9 Ave &amp; W 22 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Allen St &amp; E Houston St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Banker St &amp; Meserole Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Broad St &amp; Bridge St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Broadway &amp; W 55 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Carroll St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Christopher St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Columbia St &amp; Lorraine St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Degraw St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 116 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 15 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 2 St &amp; 2 Ave E&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 37 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 53 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 71 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 89 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Franklin St &amp; Dupont St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gold St &amp; Frankfort St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greenwich St &amp; W Houston St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;India St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lexington Ave &amp; E 26 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marcy Ave &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Murray St &amp; West St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NYCBS Depot - RIS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Penn Station Valet&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prospect Pl &amp; Underhill Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rogers Ave &amp; Sterling St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South St &amp; Whitehall St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sullivan St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 106 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 22 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 4 St &amp; 7 Ave S&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 43 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 63 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Washington St &amp; Gansevoort St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;12 Ave &amp; W 40 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;19 St &amp; 24 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;2 Ave &amp; E 99 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;31 St &amp; Hoyt Ave N&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;5 Ave &amp; E 73 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Avenue D &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bialystoker Pl &amp; Delancey St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Broadway &amp; W 39 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Carlton Ave &amp; Dean St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Clinton St &amp; Union St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Crescent St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Driggs Ave &amp; N Henry St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 109 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 11 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 32 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 48 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 66 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 84 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Forsyth St &amp; Broome St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fulton St &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greenpoint Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hoyt St &amp; Warren St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kiosk in a box Deployment&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lafayette Ave &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lafayette St &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lafayette St &amp; Jersey St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lewis Ave &amp; Decatur St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Madison Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morningside Ave &amp; W 123 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norman Ave &amp; Leonard St - 2&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Park Pl &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pleasant Ave &amp; E 116 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Riverside Dr &amp; W 91 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Smith St &amp; 3 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Steinway St &amp; 28 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vernon Blvd &amp; 31 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 20 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 38 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 54 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 92 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Washington Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wythe Ave &amp; Metropolitan Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;1 Ave &amp; E 30 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;10 Hudson Yards&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;28 St &amp; 36 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;3 Ave &amp; Schermerhorn St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;37 St &amp; 24 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;6 Ave &amp; Canal St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Amsterdam Ave &amp; W 73 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bedford Ave &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Broadway &amp; W 37 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Broadway &amp; Whipple St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Catherine St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clermont Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Columbus Ave &amp; W 103 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DeKalb Ave &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 123 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 20 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 4 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 41 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 56 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 76 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 95 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Front St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Graham Ave &amp; Withers St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hanson Pl &amp; Ashland Pl&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jay St &amp; Tech Pl&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lenox Ave &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Liberty St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mercer St &amp; Spring St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;N 8 St &amp; Driggs Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Old Fulton St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pershing Square S&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Railroad Ave &amp; Kay Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;S Portland Ave &amp; Hanson Pl&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St Johns Pl &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Union Ave &amp; Jackson St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 116 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 26 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 46 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 76 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;West End Ave &amp; W 107 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;12 St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;2 Ave &amp; E 31 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;31 Ave &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;47 Ave &amp; 31 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;5 Ave &amp; 3 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;7 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Atlantic Ave &amp; Fort Greene Pl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Berkeley Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cadman Plaza West &amp; Montague St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central Park West &amp; W 100 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Clinton St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Court St &amp; State St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Douglass St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 10 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 106 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 27 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 47 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 60 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 81 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;FDR Drive &amp; E 35 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fulton St &amp; Grand Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Great Jones St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hicks St &amp; Montague St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kingston Ave &amp; Herkimer St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Leonard St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Macon St &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Monroe St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Newton Rd &amp; 44 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NYCBS Depot - STY - Valet Scan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Park Ave &amp; St Edwards St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pioneer St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Riverside Dr &amp; W 78 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shevchenko Pl &amp; E 6 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stanton St &amp; Mangin St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Van Brunt St &amp; Wolcott St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 17 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 37 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 45 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 52 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 88 St &amp; West End Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Warren St &amp; Church St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Willoughby St &amp; Fleet St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;1 Pl &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;14 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;2 Ave &amp; E 58 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;31 St &amp; 23 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;48 Ave &amp; 5 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;5 Ave &amp; E 29 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;8 Ave &amp; W 16 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Atlantic Ave &amp; Furman St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Berkeley Pl &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cambridge Pl &amp; Gates Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central Park West &amp; W 76 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Clinton St &amp; Joralemon St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Crescent St &amp; 30 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Douglass St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 106 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 11 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 30 St &amp; Park Ave S&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 47 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 61 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 82 St &amp; East End Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Flushing Ave &amp; Carlton Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fulton St &amp; Rockwell Pl&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greene Ave &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hope St &amp; Union Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kosciuszko St &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Leonard St &amp; Maujer St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Madison Ave &amp; E 82 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montague St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norfolk St &amp; Broome St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Park Pl &amp; Church St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pitt St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Riverside Dr &amp; W 82 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shevchenko Pl &amp; E 7 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;State St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Van Dyke St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 18 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 37 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 52 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 89 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Warren St &amp; Court St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wolcott St &amp; Dwight St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;2 Ave  &amp; E 104 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;21 St &amp; 31 Dr&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;31 St &amp; Thomson Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;5 Ave &amp; E 78 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;8 Ave &amp; W 52 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 118 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Avenue D &amp; E 12 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Boerum St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Broadway &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Carlton Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Central Park West &amp; W 102 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Crescent St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Duane St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 110 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 12 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 33 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 51 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 67 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 85 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Forsyth St &amp; Canal St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fulton St &amp; Waverly Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greenwich Ave &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hudson St &amp; Reade St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lafayette Ave &amp; Fort Greene Pl&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lewis Ave &amp; Kosciuszko St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Madison St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Morningside Dr &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Moore St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pearl St &amp; Anchorage Pl&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pleasant Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Riverside Dr &amp; W 104 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Smith St &amp; 9 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sterling Pl &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vernon Blvd &amp; 41 Rd&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 20 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 39 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 55 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 95 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Washington Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yankee Ferry Terminal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;2 Ave &amp; E 122 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;21 St &amp; 43 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;34 Ave &amp; 38 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;5 Ave &amp; E 93 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;9 Ave &amp; W 16 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Adelphi St &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bank St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bond St &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Broadway &amp; W 51 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Carmine St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Centre St &amp; Worth St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Columbia St &amp; Degraw St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dwight St &amp; Van Dyke St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 115 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 13 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 33 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 52 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 68 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 88 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Franklin Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gallatin Pl &amp; Livingston St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenwich St &amp; Hubert St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Huron St &amp; Franklin St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LaGuardia Pl &amp; W 3 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lexington Ave &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maiden Ln &amp; Pearl St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mt Morris Park W &amp; W 120 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NYCBS Depot - GOW&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Peck Slip &amp; Front St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prospect Park West &amp; 8 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rivington St &amp; Ridge St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St James Pl &amp; Oliver St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sterling St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Verona Pl &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 100 St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 27 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 42 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 56 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Washington Pl &amp; Broadway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;11 Ave &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;3 St &amp; Prospect Park West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;31 Ave &amp; 14 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;333 Johnson TEST 1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;44 Dr &amp; Jackson Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;7 Ave &amp; Farragut St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Amsterdam Ave &amp; W 125 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bergen St &amp; Flatbush Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Broadway &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Broadway &amp; W 25 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Butler St &amp; Court St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central Park S &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central Park West &amp; W 85 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clinton Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cooper Square &amp; Astor Pl&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Division Ave &amp; Hooper St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 102 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 24 St &amp; Park Ave S&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 44 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 58 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 7 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 80 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eckford St &amp; Engert Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fulton St &amp; Adams St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Grand St &amp; Elizabeth St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Henry St &amp; Degraw St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kane St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Leonard St &amp; Boerum St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lorimer St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Milton St &amp; Franklin St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nassau Ave &amp; Newell St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pacific St &amp; Nevins St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pike St &amp; E Broadway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Richardson St &amp; N Henry St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Schermerhorn St &amp; Bond St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St. Nicholas Ave &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Union St &amp; Nevins St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 16 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 33 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 51 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 84 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W Broadway &amp; Spring St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Willoughby Ave &amp; Hall St&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Cooper Square &amp; E 7 St&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;E 17 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Gowanus Tech Station&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;1 Ave &amp; E 44 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;10 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;28 St &amp; 40 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;3 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;39 St &amp; 2 Ave - Citi Bike HQ at Industry City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;6 Ave &amp; Spring St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Amsterdam Ave &amp; W 79 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bedford Ave &amp; Nassau Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Broadway &amp; Moylan Pl&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brooklyn Bridge Park - Pier 2&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Center Blvd &amp; 48 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Coffey St &amp; Conover St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Commerce St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Devoe St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 20 St &amp; FDR Drive&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 42 St &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 5 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 56 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 76 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 97 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;East End Ave &amp; E 86 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Front St &amp; Maiden Ln&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grand Army Plaza &amp; Central Park S&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Harrison St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;John St &amp; William St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lenox Ave &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lincoln Pl &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Meserole Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;N 11 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Old Slip &amp; Front St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pershing Square South&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Reade St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sands St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;St Marks Pl &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Union Ave &amp; N 12 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 116 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 14 St &amp; The High Line&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 27 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 78 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;West Thames St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;24 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;3 Ave &amp; E 71 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;31 Ave &amp; Steinway St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;35 St &amp; 34 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;5 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;8 Ave &amp; W 31 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;8 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;9 Ave &amp; W 28 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Allen St &amp; Hester St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Barclay St &amp; Church St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Broadway &amp; 12 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Broadway &amp; W 56 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Carroll St &amp; Bond St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Church St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Columbia St &amp; Rivington St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Degraw St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 118 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 16 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 2 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 39 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 53 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 72 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 89 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Franklin St &amp; W Broadway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GOW Tech Shop&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenwich St &amp; Warren St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India St &amp; West St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lexington Ave &amp; E 29 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Market St &amp; Cherry St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Myrtle Ave &amp; Lewis Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NYCBS Depot - SSP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Penn Station Valet - Valet Scan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pulaski St &amp; Marcus Garvey Blvd&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;S 3 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spruce St &amp; Nassau St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Throop Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 106 St &amp; Central Park West&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 11 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 24 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 43 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 64 St &amp; West End Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Water - Whitehall Plaza&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;11 Ave &amp; W 59 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;14 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;2 Ave &amp; E 96 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;31 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;48 Ave &amp; 30 Pl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;5 Ave &amp; E 63 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Avenue D &amp; E 3 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Berry St &amp; N 8 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Broadway &amp; W 38 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canal St &amp; Rutgers St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Clinton St &amp; Tillary St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Crescent St &amp; 34 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Driggs Ave &amp; Lorimer St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 106 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 11 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 31 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 48 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 65 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 84 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Flushing Ave &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fulton St &amp; Utica Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Greene Ave &amp; Throop Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Howard St &amp; Centre St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kosciuszko St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Leonard St &amp; Meeker Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Madison Ave &amp; E 99 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montrose Ave &amp; Bushwick Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norman Ave &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Park Pl &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Plaza St West &amp; Flatbush Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Riverside Dr &amp; W 89 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sigourney St &amp; Columbia St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;State St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vernon Blvd &amp; 30 Rd&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 18 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 37 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 53 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 90 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washington Ave &amp; Greene Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wyckoff St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;1 Ave &amp; E 94 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;2 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;31 Ave &amp; 30 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;4 Ave &amp; 2 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;45 Rd &amp; 11 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;7 Ave &amp; Park Pl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ashland Pl &amp; Hanson Pl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bergen St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Broadway &amp; W 29 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cadman Plaza E &amp; Red Cross Pl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central Park W &amp; W 96 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Clinton St &amp; 4 Place&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dean St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Division Ave &amp; Marcy Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 102 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 25 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 45 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 59 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 81 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 9 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Elizabeth St &amp; Hester St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fulton St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grand St &amp; Greene St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Henry St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kent Ave &amp; N 7 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Leonard St &amp; Church St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MacDougal St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monroe St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nassau Ave &amp; Russell St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Park Ave &amp; E 124 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pike St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Riverside Blvd &amp; W 67 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Schermerhorn St &amp; Court St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stagg St &amp; Union Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;University Pl &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 16 St &amp; The High Line&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 34 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 52 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 87 St  &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W Broadway &amp; Spring Street&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Willoughby Ave &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;LPI Facility&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Pershing Square North&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;South End Ave &amp; Liberty St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;1 Ave &amp; E 16 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;27 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;3 Ave &amp; E 72 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;35 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;6 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;9 Ave &amp; W 45 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Allen St &amp; Rivington St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Barrow St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Broadway &amp; Battery Pl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Broadway &amp; W 58 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Carroll St &amp; Columbia St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Clark St &amp; Henry St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Columbia St &amp; W 9 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DeKalb Ave &amp; Hudson Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 118 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 16 St &amp; Irving Pl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 2 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 39 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 55 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 72 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 91 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 112 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Graham Ave &amp; Conselyea St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Halsey St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Industry City, Building 1 Basement&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lawrence St &amp; Willoughby St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lexington Ave &amp; E 63 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;McGuinness Blvd &amp; Eagle St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Myrtle Ave &amp; Marcy Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NYCBS Depot - STY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Perry St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;S 4 St &amp; Rodney St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SSP Tech Workshop&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tompkins Ave &amp; Hopkins St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 107 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 13 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 25 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 44 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 67 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Watts St &amp; Greenwich St&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:starttime:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2013</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2018</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>2017</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2016</bucket>
            </map>
            <map to='#edc948'>
              <bucket>%null%</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2014</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Start Date' datatype='datetime' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='#2013-07-01 00:00:00#'>
          <calculation class='tableau' formula='#2013-07-01 00:00:00#' />
          <range max='#2018-01-31 23:59:55#' min='#2013-07-01 00:00:00#' />
        </column>
        <column caption='End Date' datatype='datetime' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='#2015-07-17 04:46:40#'>
          <calculation class='tableau' formula='#2015-07-17 04:46:40#' />
          <range max='#2018-01-31 23:59:55#' min='#2013-07-01 00:00:00#' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Bike Dashboard 1' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='End Station Name' />
        <param name='target' value='Bike Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Average Bike Distance'>
      <table>
        <view>
          <datasources>
            <datasource caption='combined' name='federated.089rfbz0bfb00e17s288z1b5ihon' />
          </datasources>
          <datasource-dependencies datasource='federated.089rfbz0bfb00e17s288z1b5ihon'>
            <column caption='Distance in Miles' datatype='real' name='[Calculation_617556136822431747]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ACOS(COS(RADIANS(90-[start station latitude])) *COS(RADIANS(90-[end station latitude])) +SIN(RADIANS(90-[start station latitude])) *SIN(RADIANS(90-[end station latitude])) *COS(RADIANS([start station longitude]-[end station longitude]))) *6371' />
            </column>
            <column-instance column='[Calculation_617556136822431747]' derivation='Avg' name='[avg:Calculation_617556136822431747:qk]' pivot='key' type='quantitative' />
            <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[bikeid]' derivation='None' name='[none:bikeid:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.089rfbz0bfb00e17s288z1b5ihon].[avg:Calculation_617556136822431747:qk]' included-values='non-null' />
          <slices>
            <column>[federated.089rfbz0bfb00e17s288z1b5ihon].[avg:Calculation_617556136822431747:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.089rfbz0bfb00e17s288z1b5ihon].[avg:Calculation_617556136822431747:qk]' scope='rows' value='Average Distance in Miles' />
            <format attr='subtitle' class='0' field='[federated.089rfbz0bfb00e17s288z1b5ihon].[avg:Calculation_617556136822431747:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.089rfbz0bfb00e17s288z1b5ihon].[avg:Calculation_617556136822431747:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.089rfbz0bfb00e17s288z1b5ihon].[avg:Calculation_617556136822431747:qk]</rows>
        <cols>[federated.089rfbz0bfb00e17s288z1b5ihon].[none:bikeid:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Bottom 10 Ending Locations'>
      <table>
        <view>
          <datasources>
            <datasource caption='combined' name='federated.089rfbz0bfb00e17s288z1b5ihon' />
          </datasources>
          <datasource-dependencies datasource='federated.089rfbz0bfb00e17s288z1b5ihon'>
            <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
            <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
            <column-instance column='[end station name]' derivation='None' name='[none:end station name:nk]' pivot='key' type='nominal' />
            <column-instance column='[bikeid]' derivation='Sum' name='[sum:bikeid:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.089rfbz0bfb00e17s288z1b5ihon].[none:end station name:nk]'>
            <groupfilter count='15' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([bikeid])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Astor Place&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Broadway &amp; E 22 St - Valet Scan&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Christ Hospital&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Hilltop&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Jersey &amp; 3rd&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;NYCBS Depot - GOW Annex&quot;' />
                  <groupfilter function='member' level='[none:end station name:nk]' member='&quot;Union St&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.089rfbz0bfb00e17s288z1b5ihon].[none:end station name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.089rfbz0bfb00e17s288z1b5ihon].[none:end station name:nk]' />
              <wedge-size column='[federated.089rfbz0bfb00e17s288z1b5ihon].[sum:bikeid:qk]' />
              <size column='[federated.089rfbz0bfb00e17s288z1b5ihon].[sum:bikeid:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9010497331619263' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Bottom 10 Starting Locations'>
      <table>
        <view>
          <datasources>
            <datasource caption='combined' name='federated.089rfbz0bfb00e17s288z1b5ihon' />
          </datasources>
          <datasource-dependencies datasource='federated.089rfbz0bfb00e17s288z1b5ihon'>
            <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column-instance column='[bikeid]' derivation='Sum' name='[sum:bikeid:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.089rfbz0bfb00e17s288z1b5ihon].[none:start station name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:start station name:nk]' member='&quot;2 Ave &amp; E 105 St&quot;' />
              <groupfilter function='member' level='[none:start station name:nk]' member='&quot;31 Ave &amp; Steinway St&quot;' />
              <groupfilter function='member' level='[none:start station name:nk]' member='&quot;333 Johnson TEST 1&quot;' />
              <groupfilter function='member' level='[none:start station name:nk]' member='&quot;3969.TEMP (Bike The Branches - Central Branch)&quot;' />
              <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Expansion Tech Station&quot;' />
              <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Gowanus Tech Station&quot;' />
              <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Kiosk in a box Deployment&quot;' />
              <groupfilter function='member' level='[none:start station name:nk]' member='&quot;LPI Facility&quot;' />
              <groupfilter function='member' level='[none:start station name:nk]' member='&quot;NYCBS DEPOT - DELANCEY&quot;' />
              <groupfilter function='member' level='[none:start station name:nk]' member='&quot;NYCBS Depot - STY - Valet Scan&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.089rfbz0bfb00e17s288z1b5ihon].[none:start station name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.089rfbz0bfb00e17s288z1b5ihon].[none:start station name:nk]' />
              <wedge-size column='[federated.089rfbz0bfb00e17s288z1b5ihon].[sum:bikeid:qk]' />
              <size column='[federated.089rfbz0bfb00e17s288z1b5ihon].[sum:bikeid:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7691160440444946' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Dynamic Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='combined' name='federated.089rfbz0bfb00e17s288z1b5ihon' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Start Date' datatype='datetime' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='#2013-07-01 00:00:00#'>
              <calculation class='tableau' formula='#2013-07-01 00:00:00#' />
              <range max='#2018-01-31 23:59:55#' min='#2013-07-01 00:00:00#' />
            </column>
            <column caption='End Date' datatype='datetime' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='#2015-07-17 04:46:40#'>
              <calculation class='tableau' formula='#2015-07-17 04:46:40#' />
              <range max='#2018-01-31 23:59:55#' min='#2013-07-01 00:00:00#' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.089rfbz0bfb00e17s288z1b5ihon'>
            <column caption='Count of End Stations' datatype='integer' name='[Calculation_617556136845070344]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([end station id])' />
            </column>
            <column caption='Date Range' datatype='boolean' name='[Calculation_617556136865767436]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[starttime]&gt;= [Parameters].[Parameter 1] AND [starttime] &lt;= [Parameters].[Parameter 2]' />
            </column>
            <column caption='End Station Id' datatype='integer' name='[end station id]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Calculation_617556136865767436]' derivation='None' name='[none:Calculation_617556136865767436:nk]' pivot='key' type='nominal' />
            <column-instance column='[end station latitude]' derivation='None' name='[none:end station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[end station longitude]' derivation='None' name='[none:end station longitude:qk]' pivot='key' type='quantitative' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_617556136845070344]' derivation='User' name='[usr:Calculation_617556136845070344:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.089rfbz0bfb00e17s288z1b5ihon].[none:Calculation_617556136865767436:nk]'>
            <groupfilter function='member' level='[none:Calculation_617556136865767436:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.089rfbz0bfb00e17s288z1b5ihon].[none:Calculation_617556136865767436:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.089rfbz0bfb00e17s288z1b5ihon].[none:end station latitude:qk]' field-type='quantitative' max='4980863.4134264737' min='4963355.310947679' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.089rfbz0bfb00e17s288z1b5ihon].[none:end station longitude:qk]' field-type='quantitative' max='-8210582.7916373722' min='-8244826.5803091312' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.089rfbz0bfb00e17s288z1b5ihon].[usr:Calculation_617556136845070344:qk]' />
              <size column='[federated.089rfbz0bfb00e17s288z1b5ihon].[usr:Calculation_617556136845070344:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'> Station Latitude:&#9;</run>
                <run bold='true'>&lt;[federated.089rfbz0bfb00e17s288z1b5ihon].[none:end station latitude:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'> Station Longitude:&#9;</run>
                <run bold='true'>&lt;[federated.089rfbz0bfb00e17s288z1b5ihon].[none:end station longitude:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Populiarty of Stations:&#9;</run>
                <run bold='true'>&lt;[federated.089rfbz0bfb00e17s288z1b5ihon].[usr:Calculation_617556136845070344:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.089rfbz0bfb00e17s288z1b5ihon].[none:end station latitude:qk]</rows>
        <cols>[federated.089rfbz0bfb00e17s288z1b5ihon].[none:end station longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Gender_Breakdown'>
      <table>
        <view>
          <datasources>
            <datasource caption='combined' name='federated.089rfbz0bfb00e17s288z1b5ihon' />
          </datasources>
          <datasource-dependencies datasource='federated.089rfbz0bfb00e17s288z1b5ihon'>
            <column caption='Male_Count' datatype='integer' name='[Calculation_617556136459292673]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(INT([gender] = 1))' />
            </column>
            <column caption='Female_Count' datatype='integer' name='[Calculation_617556136461750274]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(INT([gender] = 2))' />
            </column>
            <column caption='Gender' datatype='integer' name='[gender]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_617556136459292673]' derivation='User' name='[usr:Calculation_617556136459292673:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_617556136461750274]' derivation='User' name='[usr:Calculation_617556136461750274:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.089rfbz0bfb00e17s288z1b5ihon].[usr:Calculation_617556136461750274:qk]' scope='rows' value='Number of Females' />
            <format attr='subtitle' class='0' field='[federated.089rfbz0bfb00e17s288z1b5ihon].[usr:Calculation_617556136461750274:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.089rfbz0bfb00e17s288z1b5ihon].[usr:Calculation_617556136461750274:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.089rfbz0bfb00e17s288z1b5ihon].[usr:Calculation_617556136459292673:qk]' scope='rows' value='Number of Males' />
            <format attr='subtitle' class='0' field='[federated.089rfbz0bfb00e17s288z1b5ihon].[usr:Calculation_617556136459292673:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.089rfbz0bfb00e17s288z1b5ihon].[usr:Calculation_617556136459292673:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.089rfbz0bfb00e17s288z1b5ihon].[:Measure Names]' value='142' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.089rfbz0bfb00e17s288z1b5ihon].[usr:Calculation_617556136461750274:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.089rfbz0bfb00e17s288z1b5ihon].[usr:Calculation_617556136459292673:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>([federated.089rfbz0bfb00e17s288z1b5ihon].[usr:Calculation_617556136461750274:qk] + [federated.089rfbz0bfb00e17s288z1b5ihon].[usr:Calculation_617556136459292673:qk])</rows>
        <cols>[federated.089rfbz0bfb00e17s288z1b5ihon].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Growth in Customers'>
      <table>
        <view>
          <datasources>
            <datasource caption='combined' name='federated.089rfbz0bfb00e17s288z1b5ihon' />
          </datasources>
          <datasource-dependencies datasource='federated.089rfbz0bfb00e17s288z1b5ihon'>
            <column caption='Customer_Count' datatype='integer' name='[Calculation_1339539451491135489]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(INT([usertype] = &apos;Customer&apos;))' />
            </column>
            <column caption='Subscriber_Count' datatype='integer' name='[Calculation_1339539451493117955]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(INT([usertype] =&apos;Subscriber&apos;))' />
            </column>
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column caption='Usertype' datatype='string' name='[usertype]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1339539451491135489]' derivation='User' name='[usr:Calculation_1339539451491135489:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1339539451493117955]' derivation='User' name='[usr:Calculation_1339539451493117955:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Year' name='[yr:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.089rfbz0bfb00e17s288z1b5ihon].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.089rfbz0bfb00e17s288z1b5ihon].[usr:Calculation_1339539451491135489:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.089rfbz0bfb00e17s288z1b5ihon].[usr:Calculation_1339539451493117955:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.089rfbz0bfb00e17s288z1b5ihon].[usr:Calculation_1339539451491135489:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.089rfbz0bfb00e17s288z1b5ihon].[yr:starttime:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:starttime:ok]' />
              <groupfilter function='member' level='[yr:starttime:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.089rfbz0bfb00e17s288z1b5ihon].[usr:Calculation_1339539451491135489:qk]</column>
            <column>[federated.089rfbz0bfb00e17s288z1b5ihon].[:Measure Names]</column>
            <column>[federated.089rfbz0bfb00e17s288z1b5ihon].[yr:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.089rfbz0bfb00e17s288z1b5ihon].[usr:Calculation_1339539451491135489:qk]' scope='rows' value='Customers' />
            <format attr='subtitle' class='0' field='[federated.089rfbz0bfb00e17s288z1b5ihon].[usr:Calculation_1339539451491135489:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.089rfbz0bfb00e17s288z1b5ihon].[usr:Calculation_1339539451491135489:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.089rfbz0bfb00e17s288z1b5ihon].[usr:Calculation_1339539451493117955:qk]' scope='rows' value='Subscribers' />
            <format attr='subtitle' class='0' field='[federated.089rfbz0bfb00e17s288z1b5ihon].[usr:Calculation_1339539451493117955:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.089rfbz0bfb00e17s288z1b5ihon].[usr:Calculation_1339539451493117955:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.089rfbz0bfb00e17s288z1b5ihon].[usr:Calculation_1339539451491135489:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.089rfbz0bfb00e17s288z1b5ihon].[usr:Calculation_1339539451493117955:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.089rfbz0bfb00e17s288z1b5ihon].[usr:Calculation_1339539451491135489:qk] + [federated.089rfbz0bfb00e17s288z1b5ihon].[usr:Calculation_1339539451493117955:qk])</rows>
        <cols>[federated.089rfbz0bfb00e17s288z1b5ihon].[yr:starttime:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Growth in Femal Riders'>
      <table>
        <view>
          <datasources>
            <datasource caption='combined' name='federated.089rfbz0bfb00e17s288z1b5ihon' />
          </datasources>
          <datasource-dependencies datasource='federated.089rfbz0bfb00e17s288z1b5ihon'>
            <column caption='Female_Count' datatype='integer' name='[Calculation_617556136461750274]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM(INT([gender] = 2))' />
            </column>
            <column-instance column='[Calculation_617556136461750274]' derivation='User' name='[cum:usr:Calculation_617556136461750274:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column caption='Gender' datatype='integer' name='[gender]' role='measure' type='quantitative' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[starttime]' derivation='Year' name='[yr:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.089rfbz0bfb00e17s288z1b5ihon].[yr:starttime:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:starttime:ok]' member='2014' />
              <groupfilter function='member' level='[yr:starttime:ok]' member='2016' />
              <groupfilter function='member' level='[yr:starttime:ok]' member='2017' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.089rfbz0bfb00e17s288z1b5ihon].[yr:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.089rfbz0bfb00e17s288z1b5ihon].[cum:usr:Calculation_617556136461750274:qk]' scope='rows' value='Running Total of Femal Riders ' />
            <format attr='subtitle' class='0' field='[federated.089rfbz0bfb00e17s288z1b5ihon].[cum:usr:Calculation_617556136461750274:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.089rfbz0bfb00e17s288z1b5ihon].[cum:usr:Calculation_617556136461750274:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.089rfbz0bfb00e17s288z1b5ihon].[cum:usr:Calculation_617556136461750274:qk]</rows>
        <cols>[federated.089rfbz0bfb00e17s288z1b5ihon].[yr:starttime:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Growth in Riders'>
      <table>
        <view>
          <datasources>
            <datasource caption='combined' name='federated.089rfbz0bfb00e17s288z1b5ihon' />
          </datasources>
          <datasource-dependencies datasource='federated.089rfbz0bfb00e17s288z1b5ihon'>
            <column caption='Total_Rides' datatype='integer' name='[Calculation_1339539451484573696]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count([birth year])' />
            </column>
            <column caption='Birth Year' datatype='string' name='[birth year]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1339539451484573696]' derivation='User' name='[cum:usr:Calculation_1339539451484573696:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Calculation_1339539451484573696]' derivation='User' name='[pcdf:usr:Calculation_1339539451484573696:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[starttime]' derivation='Year' name='[yr:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.089rfbz0bfb00e17s288z1b5ihon].[yr:starttime:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:starttime:ok]' />
              <groupfilter function='member' level='[yr:starttime:ok]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.089rfbz0bfb00e17s288z1b5ihon].[yr:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.089rfbz0bfb00e17s288z1b5ihon].[yr:starttime:ok]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.089rfbz0bfb00e17s288z1b5ihon].[cum:usr:Calculation_1339539451484573696:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.089rfbz0bfb00e17s288z1b5ihon].[yr:starttime:ok]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.089rfbz0bfb00e17s288z1b5ihon].[pcdf:usr:Calculation_1339539451484573696:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.089rfbz0bfb00e17s288z1b5ihon].[yr:starttime:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.089rfbz0bfb00e17s288z1b5ihon].[cum:usr:Calculation_1339539451484573696:qk] + [federated.089rfbz0bfb00e17s288z1b5ihon].[pcdf:usr:Calculation_1339539451484573696:qk])</rows>
        <cols>[federated.089rfbz0bfb00e17s288z1b5ihon].[yr:starttime:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Static Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='combined' name='federated.089rfbz0bfb00e17s288z1b5ihon' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.089rfbz0bfb00e17s288z1b5ihon'>
            <column caption='Count of Station Uses' datatype='integer' name='[Calculation_617556136833126404]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([start station id])' />
            </column>
            <column-instance column='[start station latitude]' derivation='None' name='[none:start station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station longitude]' derivation='None' name='[none:start station longitude:qk]' pivot='key' type='quantitative' />
            <column caption='Start Station Id' datatype='integer' name='[start station id]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Calculation_617556136833126404]' derivation='User' name='[usr:Calculation_617556136833126404:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.089rfbz0bfb00e17s288z1b5ihon].[none:start station longitude:qk]' included-values='non-null' />
          <slices>
            <column>[federated.089rfbz0bfb00e17s288z1b5ihon].[none:start station longitude:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.089rfbz0bfb00e17s288z1b5ihon].[none:start station longitude:qk]' field-type='quantitative' max='-8223835.3945851633' min='-8245800.9827134302' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.089rfbz0bfb00e17s288z1b5ihon].[none:start station latitude:qk]' field-type='quantitative' max='4979955.100389719' min='4967403.3357449956' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.089rfbz0bfb00e17s288z1b5ihon].[usr:Calculation_617556136833126404:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e9d2d2</color>
                <color>#e2b5b5</color>
                <color>#db9999</color>
                <color>#d47f7f</color>
                <color>#cd6666</color>
                <color>#c64f4f</color>
                <color>#bf3939</color>
                <color>#b82424</color>
                <color>#b11111</color>
                <color>#aa0000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.089rfbz0bfb00e17s288z1b5ihon].[usr:Calculation_617556136833126404:qk]' />
              <size column='[federated.089rfbz0bfb00e17s288z1b5ihon].[usr:Calculation_617556136833126404:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Station Latitude:&#9;</run>
                <run bold='true'>&lt;[federated.089rfbz0bfb00e17s288z1b5ihon].[none:start station latitude:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Station Longitude:&#9;</run>
                <run bold='true'>&lt;[federated.089rfbz0bfb00e17s288z1b5ihon].[none:start station longitude:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Popularity of Station:&#9;</run>
                <run bold='true'>&lt;[federated.089rfbz0bfb00e17s288z1b5ihon].[usr:Calculation_617556136833126404:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.089rfbz0bfb00e17s288z1b5ihon].[none:start station latitude:qk]</rows>
        <cols>[federated.089rfbz0bfb00e17s288z1b5ihon].[none:start station longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Top 10 Ending Locations'>
      <table>
        <view>
          <datasources>
            <datasource caption='combined' name='federated.089rfbz0bfb00e17s288z1b5ihon' />
          </datasources>
          <datasource-dependencies datasource='federated.089rfbz0bfb00e17s288z1b5ihon'>
            <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
            <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
            <column-instance column='[end station name]' derivation='None' name='[none:end station name:nk]' pivot='key' type='nominal' />
            <column caption='Stoptime' datatype='datetime' name='[stoptime]' role='dimension' type='ordinal' />
            <column-instance column='[bikeid]' derivation='Sum' name='[sum:bikeid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[stoptime]' derivation='Year' name='[yr:stoptime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.089rfbz0bfb00e17s288z1b5ihon].[none:end station name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([bikeid])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:end station name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.089rfbz0bfb00e17s288z1b5ihon].[yr:stoptime:ok]'>
            <groupfilter from='2013' function='range' level='[yr:stoptime:ok]' to='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.089rfbz0bfb00e17s288z1b5ihon].[yr:stoptime:ok]</column>
            <column>[federated.089rfbz0bfb00e17s288z1b5ihon].[none:end station name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.089rfbz0bfb00e17s288z1b5ihon].[none:end station name:nk]' value='Top 10 End Stations&#10;'>
              <formatted-text>
                <run>Top 10 End Stations&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.089rfbz0bfb00e17s288z1b5ihon].[none:end station name:nk]' />
              <wedge-size column='[federated.089rfbz0bfb00e17s288z1b5ihon].[sum:bikeid:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.8790607452392578' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Top 10 Starting Locations'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Starting Locations</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='combined' name='federated.089rfbz0bfb00e17s288z1b5ihon' />
          </datasources>
          <datasource-dependencies datasource='federated.089rfbz0bfb00e17s288z1b5ihon'>
            <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column caption='Start Station Id' datatype='integer' name='[start station id]' role='measure' type='quantitative' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[bikeid]' derivation='Sum' name='[sum:bikeid:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Year' name='[yr:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.089rfbz0bfb00e17s288z1b5ihon].[none:start station name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([start station id])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:start station name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.089rfbz0bfb00e17s288z1b5ihon].[yr:starttime:ok]'>
            <groupfilter from='2013' function='range' level='[yr:starttime:ok]' to='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.089rfbz0bfb00e17s288z1b5ihon].[yr:starttime:ok]</column>
            <column>[federated.089rfbz0bfb00e17s288z1b5ihon].[none:start station name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.089rfbz0bfb00e17s288z1b5ihon].[none:start station name:nk]' />
              <wedge-size column='[federated.089rfbz0bfb00e17s288z1b5ihon].[sum:bikeid:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5052486658096313' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Total_Bike_Rides'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Number of Bike Rides</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='combined' name='federated.089rfbz0bfb00e17s288z1b5ihon' />
          </datasources>
          <datasource-dependencies datasource='federated.089rfbz0bfb00e17s288z1b5ihon'>
            <column caption='Total_Rides' datatype='integer' name='[Calculation_1339539451484573696]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count([birth year])' />
            </column>
            <column caption='Birth Year' datatype='string' name='[birth year]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1339539451484573696]' derivation='User' name='[usr:Calculation_1339539451484573696:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.089rfbz0bfb00e17s288z1b5ihon].[usr:Calculation_1339539451484573696:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Trip Duration by Age'>
      <table>
        <view>
          <datasources>
            <datasource caption='combined' name='federated.089rfbz0bfb00e17s288z1b5ihon' />
          </datasources>
          <datasource-dependencies datasource='federated.089rfbz0bfb00e17s288z1b5ihon'>
            <column-instance column='[tripduration]' derivation='Avg' name='[avg:tripduration:qk]' pivot='key' type='quantitative' />
            <column caption='Birth Year' datatype='string' name='[birth year]' role='dimension' type='nominal' />
            <column-instance column='[birth year]' derivation='None' name='[none:birth year:nk]' pivot='key' type='nominal' />
            <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.089rfbz0bfb00e17s288z1b5ihon].[none:birth year:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:birth year:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:birth year:nk]' member='%null%' />
                <groupfilter from='&quot;\\N&quot;' function='range' level='[none:birth year:nk]' to='&quot;1950&quot;' />
                <groupfilter function='member' level='[none:birth year:nk]' member='&quot;birth year&quot;' />
                <groupfilter function='member' level='[none:birth year:nk]' member='&quot;Birth Year&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.089rfbz0bfb00e17s288z1b5ihon].[none:birth year:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.089rfbz0bfb00e17s288z1b5ihon].[avg:tripduration:qk]' scope='rows' value='Average Trip Duration (seconds)' />
            <format attr='subtitle' class='0' field='[federated.089rfbz0bfb00e17s288z1b5ihon].[avg:tripduration:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.089rfbz0bfb00e17s288z1b5ihon].[avg:tripduration:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.089rfbz0bfb00e17s288z1b5ihon].[avg:tripduration:qk]</rows>
        <cols>[federated.089rfbz0bfb00e17s288z1b5ihon].[none:birth year:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Bike Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1600' minheight='800' minwidth='1600' sizing-mode='fixed' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='14' param='vert' type='layout-flow' w='99000' x='500' y='1000'>
            <zone h='98000' id='12' type='layout-basic' w='99000' x='500' y='1000'>
              <zone h='48999' id='6' param='horz' type='layout-flow' w='99000' x='500' y='1000'>
                <zone h='48999' id='4' type='layout-basic' w='89000' x='500' y='1000'>
                  <zone h='48999' id='1' name='Total_Bike_Rides' w='13063' x='500' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='48999' id='3' name='Growth in Riders' w='42000' x='47500' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='48999' id='15' name='Growth in Customers' w='33937' x='13563' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone fixed-size='160' h='48999' id='5' is-fixed='true' param='vert' type='layout-flow' w='10000' x='89500' y='1000'>
                  <zone h='15750' id='7' name='Growth in Riders' pane-specification-id='3' param='[federated.089rfbz0bfb00e17s288z1b5ihon].[yr:starttime:ok]' type='color' w='10000' x='89500' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='49001' id='8' name='Top 10 Starting Locations' w='11188' x='500' y='49999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49001' id='10' name='Top 10 Ending Locations' w='11000' x='18625' y='49999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49001' id='9' name='Top 10 Starting Locations' pane-specification-id='0' param='[federated.089rfbz0bfb00e17s288z1b5ihon].[none:start station name:nk]' type='color' w='6937' x='11688' y='49999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49001' id='11' name='Top 10 Ending Locations' pane-specification-id='0' param='[federated.089rfbz0bfb00e17s288z1b5ihon].[none:end station name:nk]' type='color' w='13000' x='29625' y='49999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49001' id='16' name='Bottom 10 Starting Locations' w='17188' x='42625' y='49999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49001' id='17' name='Bottom 10 Ending Locations' w='18437' x='71063' y='49999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49001' id='18' name='Bottom 10 Ending Locations' pane-specification-id='0' param='[federated.089rfbz0bfb00e17s288z1b5ihon].[none:end station name:nk]' type='color' w='10000' x='89500' y='49999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49001' id='19' name='Bottom 10 Starting Locations' pane-specification-id='0' param='[federated.089rfbz0bfb00e17s288z1b5ihon].[none:start station name:nk]' type='color' w='11250' x='59813' y='49999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Bike Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1600' minheight='800' minwidth='1600' sizing-mode='fixed' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='49000' id='1' name='Gender_Breakdown' w='49500' x='500' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='49000' id='3' name='Growth in Femal Riders' w='49500' x='50000' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='49000' id='4' name='Trip Duration by Age' w='49500' x='500' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='49000' id='5' name='Average Bike Distance' w='49500' x='50000' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Bike Dashboard 3'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='1' name='Static Map' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='8' name='Dynamic Map' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='18250' id='7' name='Static Map' pane-specification-id='0' param='[federated.089rfbz0bfb00e17s288z1b5ihon].[usr:Calculation_617556136833126404:qk]' type='size' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9375' id='9' mode='slider' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='83200' y='19250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='163' h='21375' id='10' is-fixed='true' mode='slider' param='[Parameters].[Parameter 2]' type='paramctrl' w='16000' x='83200' y='28625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Total_Bike_Rides'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.089rfbz0bfb00e17s288z1b5ihon].[none:birth year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Growth in Riders'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.089rfbz0bfb00e17s288z1b5ihon].[yr:starttime:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.089rfbz0bfb00e17s288z1b5ihon].[yr:starttime:ok]</field>
                </fields>
                <multibucket>
                  <bucket>%null%</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.089rfbz0bfb00e17s288z1b5ihon].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Growth in Customers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.089rfbz0bfb00e17s288z1b5ihon].[yr:starttime:ok]</field>
                </fields>
                <multibucket>
                  <bucket>%null%</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.089rfbz0bfb00e17s288z1b5ihon].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Top 10 Starting Locations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.089rfbz0bfb00e17s288z1b5ihon].[none:start station name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.089rfbz0bfb00e17s288z1b5ihon].[none:birth year:nk]</field>
            <field>[federated.089rfbz0bfb00e17s288z1b5ihon].[none:start station id:qk]</field>
            <field>[federated.089rfbz0bfb00e17s288z1b5ihon].[none:start station name:nk]</field>
            <field>[federated.089rfbz0bfb00e17s288z1b5ihon].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Top 10 Ending Locations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.089rfbz0bfb00e17s288z1b5ihon].[none:end station name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.089rfbz0bfb00e17s288z1b5ihon].[none:end station name:nk]</field>
            <field>[federated.089rfbz0bfb00e17s288z1b5ihon].[none:start station name:nk]</field>
            <field>[federated.089rfbz0bfb00e17s288z1b5ihon].[yr:stoptime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Bottom 10 Ending Locations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.089rfbz0bfb00e17s288z1b5ihon].[none:end station name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.089rfbz0bfb00e17s288z1b5ihon].[none:end station name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Bottom 10 Starting Locations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.089rfbz0bfb00e17s288z1b5ihon].[none:start station name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.089rfbz0bfb00e17s288z1b5ihon].[none:start station name:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Start Station Name&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.089rfbz0bfb00e17s288z1b5ihon].[none:start station name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Gender_Breakdown'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.089rfbz0bfb00e17s288z1b5ihon].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Growth in Femal Riders'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.089rfbz0bfb00e17s288z1b5ihon].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Trip Duration by Age'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.089rfbz0bfb00e17s288z1b5ihon].[none:birth year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Average Bike Distance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Static Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.089rfbz0bfb00e17s288z1b5ihon].[usr:Calculation_617556136833126404:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.089rfbz0bfb00e17s288z1b5ihon].[usr:Calculation_617556136833126404:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.089rfbz0bfb00e17s288z1b5ihon].[none:start station latitude:qk]</field>
            <field>[federated.089rfbz0bfb00e17s288z1b5ihon].[none:start station longitude:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Dynamic Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.089rfbz0bfb00e17s288z1b5ihon].[:Measure Names]</field>
            <field>[federated.089rfbz0bfb00e17s288z1b5ihon].[none:Calculation_617556136863535115:qk]</field>
            <field>[federated.089rfbz0bfb00e17s288z1b5ihon].[none:Calculation_617556136865767436:nk]</field>
            <field>[federated.089rfbz0bfb00e17s288z1b5ihon].[usr:Calculation_617556136845070344:qk]</field>
            <field>[federated.089rfbz0bfb00e17s288z1b5ihon].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Bike Dashboard 1'>
      <viewpoints>
        <viewpoint name='Bottom 10 Ending Locations' />
        <viewpoint name='Bottom 10 Starting Locations'>
          <highlight>
            <color-one-way>
              <field>[federated.089rfbz0bfb00e17s288z1b5ihon].[none:start station name:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Growth in Customers'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.089rfbz0bfb00e17s288z1b5ihon].[usr:Calculation_1339539451493117955:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Growth in Riders'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.089rfbz0bfb00e17s288z1b5ihon].[yr:starttime:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Top 10 Ending Locations'>
          <highlight field='[federated.089rfbz0bfb00e17s288z1b5ihon].[none:end station name:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Top 10 Starting Locations'>
          <highlight>
            <color-one-way>
              <field>[federated.089rfbz0bfb00e17s288z1b5ihon].[none:start station name:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Total_Bike_Rides'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='15' />
    </window>
    <window class='dashboard' name='Bike Dashboard 2'>
      <viewpoints>
        <viewpoint name='Average Bike Distance'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Gender_Breakdown'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Growth in Femal Riders'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Trip Duration by Age'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.089rfbz0bfb00e17s288z1b5ihon].[avg:tripduration:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='4' />
    </window>
    <window class='dashboard' maximized='true' name='Bike Dashboard 3'>
      <viewpoints>
        <viewpoint name='Dynamic Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Static Map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Average Bike Distance' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bike Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bike Dashboard 2' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Bike Dashboard 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='164' name='Bottom 10 Ending Locations' width='164'>
      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
      gg==
    </thumbnail>
    <thumbnail height='164' name='Bottom 10 Starting Locations' width='164'>
      iVBORw0KGgoAAAANSUhEUgAAAKQAAACkCAYAAAAZtYVBAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAARcklEQVR4nO2d3W8b15mHf5ZEUSIZ0bIo0o4jBbIkf60tx06DeuOFgyZxG+QqWAdoi3qv
      tkCzBTYBgvwD/QCaXu2dtwG8V4u9sNFshQU26FbxAjFU13BkKbENx5VsaR1FlkOToimRlGhR
      1F7QI49Gw5lzZs7XDOe5cUSRnIPg0ftxzjvktvX19XUEBChCk+wFBAToCYQMUIpAyAClCIQM
      UIpAyAClCIQMUIpAyAClCIQMUIpAyAClCIQMUIpAyAClCIQMUIpAyAClCIQMUIpAyAClCIQM
      UIoW2QvwKsulEgAgl3n45OciAGBlubTp93+4VUGyMwoAG/8CQKoziuT2KA7tSQpbsxcIhLRB
      L14u+xDLpRJWSsWNx+24ObMKzFg/J6mTs7v5Eb430Ibm577jdumeJBDSgF7A+7P3NiIgT9K5
      ItK5Im7OpHEgdA/fnfh3NHU8i20du9H83Eto6XkJzc+9xH0dKhAIiZqEIgW04kDoHgCgungf
      WLyPtW8+x+Mr2CRo+G9/LnWNPGlYITUJc9mHuP/1PdnL2eBAq/laNgt6Fq3Hf46m+LMIHXxL
      8Ar50nBCFnIZTI6NYm4+jbZ4l+zlbCLR/GgjQtrx+MrZ2r9/OYuWg28h9DdvoanjWZ7LE0LD
      CFnIZTA+MoypsVEAQDTZo5yQTqgu3sfjK2fx+MrZjXTu5XrT90JOXRvF1OejmJ++venxYnoW
      8d69aAlHJK1sK91NeVevX/vmczw6+z7KS8cQf/s0oq+cZLQycfhWyKmxUUyNbRVRTzmfRUtS
      HSFJ03U9quVWLM+lUC0/RPZff4f87z/2nJi+E7KQy+DS+XOWImrkv55ENNkjYFVk1GtoSKks
      RlEttz79+WFNzMJnn6Hrn95BS3e32yVyxzdCas3KxMgw8Wsq5RJW8lklakmahsaMarkV5Uyn
      6e/Kt77C/X9+D/G3TyP+9mnH1xCBL4ScujaK8T8No5DLUL+2mJ5VQki3VMshVBZjls/J//5j
      FD+7pHQa9/RwhdY5Xzp/zpGMQE1IFXDb0CzPpYiep6Xxb3/5K1fX44VnhSzkMvjv331IlaLr
      oYKUbtJ1ZTFqGx2NaGl85dYtx9flgSeFHB8ZxvnffOA4KhopqCCki4aGNDoaqTx8iPQvf41v
      /vhHx9dmjaeELOQyuHThHJOoqKecz2Iln2X6nrQ4jZDVcit1dNSzFIviPx/M4aOrlx2/B0s8
      I6SWorWTFtbITNuJZuf1Y3H6OVfX/mqgD3M7k5heyOLDzy5iekHuH6YnhCzkMkxTtBkyhexu
      euTodW6j49zOJD5/4fDGz7nlEj66elmqlMoLOTU2ivO/+UDItWRJ6TRdO60dgVqqvvh3x01/
      J1NKpYWcGBnGpQvnhF1PVnPjpKGpllvx+KH5RrgdmoxLsWjd53x09TKuzYn//6GskOMjwxhn
      3LzYUc5nUSmT3ZrAEicRsuxQRuBp3WjHhRtfYOTOXx1fxwlKCjk+Msy8kyYl//Wk0Oslmunr
      x2q5FSsO0/Xtgb5NdaMdn96ZFCqlckJOSJQREF9HOjmhqSzWT7VWWNWNVnx6Z1JY+lZKyKmx
      UeFp2gyRUtKma23EjBanMmpcuPGFkEZHGSHn794W2sBYIXKTnLahMY6YkUJaN1ohovtWQshC
      LoNPPvpQ9jI2KKZnhTU3tBGy3oiZFbR1oxW8pZQupHYCoxoimhvahsbJEIXbVG3GhRtfMH0/
      PdKFdDM6xhMRdSRtQ0NbO/KQEXh6osMDqUKOjwwT3WogC95S0qRrJ9GRRd1Yj+mFLJftIGlC
      FnIZqds7JPBubmgaGtroyLJurMendyaZ15NShFS1bjRSTM+issKvuSGNkLRDFLxStRms60kp
      Ql66oGbdaEZ5kU+UpBk5o4mOS7Eo/vDGa06W5AjW9aRwIafGRjF/V9260Uh2ik9HSTpyRjtE
      cfWFw5ZDEzyYXsgyS91ChdRuyvIaPGpJ0nRNEx1vD/Th9kCf0yW5glXqFirk5NioZ1K1Hh7d
      NklDQxMdRdaNZuSWS0y6bmFCeqGrrgePkxuSCEk6RCG6bqwHi65bmJCqnFM7pcwwbZOc0FTL
      rShOk33Mi92wrUjcRkkhQs7fve2pRsYMlkeJJCc0pNHx6guHuG1+O8FtgyNESK+maj3a5wCx
      wC5dW31Ojx7jTVqq4CZKchdy/u5tpY8HaWDV3Ng1NCTHhLKbGCvcREnuQvohOmowE9ImQtpF
      R5KbtGTjNEpyFXJ+2j/RUcOtlHYNDUl05Dk0wQqnUZKrkH6Kjhpub5W1a2jsNsJVrRvNGHNw
      Hw43IQu5jOc7azPcfg6QVbq2i45LsSiGFdhvJOXa3Cx1lOQmpBePCElxk7atGhqr6KhyE2MF
      bZTkI2ShiPkvr3F5axVwJWSdCGk3YuaFutEM2ttn+Qi5VMQP+1/BD/tfwdHEAJdLyMaJlFYj
      Z1bRUcSwLU9opOQj5MRNAEAs1I5jiYENMWOhdi6Xk4GT5qbeyJnVEIVXU7WeuxR1JHshC0Xg
      QXrTQ3ox/RI1y/ks9TR5vXRdLzr6QUZAdoScT1v+WpPzH/e/gZO7DmMwvpv5EkSRn6U73zZr
      aKyio1frRjNIpWQv5JTNt5XrGIzvxsldhz2b0mnrSLMIWW+Iwut1oxHStM1WSJN0TYKXUzqp
      lGYnNPU+p8cvqVqPnAhZKLp+C681QqSb5GYnNGaf06PKsC0Pcsv2NTdbIW3qRxq8EjVJp8mN
      6breiJmMm7REQXJqw1ZIB+maBNUbIZLhXWNDY/ZVcDJv0hIBSR3JTshCkWmErIeKjRBJHZkw
      7EEaa0c/1o1GSOpIdl++ueS+fqRBi5rHEgMorC5jMj+HicwdoWvQY/WtsonmR+jWndIYhyj8
      XDcayS2X0Nle/zvK2UVITumaBBUaIasoaWxojNFR9WFbltjVkWxTtmRkNkJWzY2+oTEOUah2
      kxZv7OpIz6ZsO4wpfTxzB1P5Oa7XLOezaEluTUf6hkb/VXBeGrYVha8iZD1ioXYhjVC9zwHS
      Ghp9dGyEJsYMu8aGTYQsFJUWUkNEI2RsbvQNjVY7euEmLVlI/0hnWej3No8mBrArsoPJ+xqb
      G62h0Q9R+GlowglWJzZsIqRi9SMtx540PyyiZjE9i3jPXrS01WpJraHRhiiCurHWab+423zr
      h42QErd8WMKqESovZp8K2Xpv43N6GrVuNLJgESEbNmXb4aYR0h8lJpoeobIYDepGQtht+/gU
      J42Q9jlAbfEudFWWsTS3B18daOy6kRR2XXYDoJdzPHMH86UFPCgtmD63mJ5FW7wLlcUobvXs
      a/i6UU9uebnu74II6RC7RqiYnkXX4AvIrPTg4veDupEUJkJOTOeRubcKAIiENv8u0rJty/Pb
      TR6LhDY/FmkBtgFYf/LzNgDtW56z9X1EY5XSi+lZ/M9QYwxNsIKJkKXVdZQqNXVKFeNv17c8
      nyf1JLX7QzH7I6m9busfiob2B6M9p2lbG/Zv78fe+G5M5ucwm8tgbqifav2NAPd9yEhnDJj5
      lsVbuUb7w9j6uPERnn8ozQB6MXTiIsYL1zFT7kBH9BiibYMcr+kPgm0fTrRFiogn0nivdxV9
      4UUsLF7CfPY88sVx2UuTjph5yIBNJHumN/77vd5VDEaqqKwVsFicCMS0gImQ7dvpvqXU74Qj
      RTy//+amx87sqmAwUgWAhhezs73+IUMQITmwPbH1KLUrtI4zuzYXso0uphmBkBxI6dK1nq7Q
      Ot7rXd3yeCDmU5gIGekMUrZGPJFG3CRCagxGqqZSAo0jZv+ORN3fMRIyGBjQeH7fDdvnWEkJ
      PBVzNv1vvhbTDCZCJvp2sngbz6Nt9ZAwGKluqSnN0ItZWSu4XaIS7NlhfrswwLCGDNI20EsQ
      HfUcj6/hu/E1oufqU7mXxbTqsAGWQm5v7LQdjhSR6iX/KEKNf9BtB5GgiZnOfeJJMa02xYEg
      QjLDbKuHFG3jnIby6jzms+cxnz2P8uN5x9cWjTAhuxq4jmyLFKnTtREnUgK1Bij96BPPiCks
      ZTcy8UQabRH3Q8pnKNO3Hr2YxZUp12vhxR6LLR+AoZC9xxp3zKreRjgtZqc5tFTWCsoOcnS2
      R9Bv0WEDjCNkI0pptxFOS1doHb/of+z6fVTcZLdL1wBjIRuxjiTZCKel3hGjE1QS02r/USOo
      IV0QptgIp8XuNIcWFcS0OjLUCFK2C57fd9P+SS4gPc2hQZaYne0RORGyUaRsixSR6mXTzFhx
      PL6GNxNspQTEi0lSPwIchGyUOpJXqjbjzcSa4+0gO0QNcnxndw/R84II6YC2SJHZVg8pTjfO
      aeA1yNHZ3o4XZQkJ+F9Kns2MFSKkBNgPctgdF+rhIqTf0zaPrR5S3Jzm0MJqkOP1gX3Ez+UW
      If06bEEz88gDFqc5tGiDHOncJ9Tn5SSnM3q47UMm+sy/A9rruB2iYAGr0xxayqvz1IMcJFs9
      ergJ2ePDOtLpzCMPWJ7m0EIzyEHaXWtwjJA7fRclRXfWdrA+zaFFP8hhJuaeHV3qREgA2Pfa
      EZ5vL5Q2k5v/VYDHaQ4t9SaMTlE0MxpchfRTlJTZyNjB6zSHFv3pTyqyQB0dAQHDFT3H1Pye
      a1pUS9dGeJ7m0FJZK+CNvS86ei13IXuP9Xs+SrKeeeSFqI1zO7pjSRzcecjRa4WMn3k9Ssrc
      CKdFBSl/9vK7jl8rREgvR0lZx4RukCnlgdQhx9EREDige/T0CVGXYgrvmUdeyOi8E7EkTh/5
      kav3ECZkpDOGfa96axtI1MwjD2Sc5hx0GR0Bwbcw7H/tiKfOuL2Wqo2IPM3pjiXxzgnntaOG
      8HtqvBIlZcw88kDUaY7bVK0hXEivNDhebGbqwfs050DqEE72v8rkvaTcdXjipz9QPnV7aauH
      BF6nOaxStYa022CPnn5Z1qVt8cpGOC1vJtZwnPDj/0hIxJL42cvvojvG7ktFpQmZ6NupbD3p
      t+ioh+XE+Sv9r7ruqo1I/aCA/a8dUa6elD0RLgIWG+cHUoeYNTJ6pH9yhWob5kkfdNYkuJGS
      dd2oR7qQkc4YTvz0+7KXAUDdmUdenNlVwY4Q3Xc+8qgb9UgXEqjVkypI6fdUbYR247w7lsQ7
      L7/LvG7Uo4SQgBpS+mEjnBYaKU9yaGKMKCMkUJNSVk3p160eEkhOc04f+RGXJsaIUkICtZMc
      GdtBft7qIcFKSlEyAgoKCdS2g0RK6adjQjcMRqpbTnNEyggoKiRQk1JU+vbqzCMP9Kc5omUE
      gG3r6+t0fb9gMjMP8Odzf+L2/m2RIl469V/c3t+LNIVTmAj9AN87+GPx1xZ+RUp4d99Bqt5M
      UziF9t0/kSIj4AEhAX5SsvjCIz/RFE6hY/9vEU6ckrcGaVemJNG3E6c++HumZ9+svvDID2gy
      NoXlzhYoX0Oacfvil/jr/37p+n2GTlxs+JTdFE4hnHgd7bvPyF4KAI8KCbhvduKJNIZOXGS4
      Iu/RFE4h2vc+Qh1DspeygWeFBIBSroCJj/+MzMy31K9t9OjY8swQYnvel56ijXhaSA3aaNnI
      Wz2qpWgjvhBSg7S23Hv0ijIfPCoK1UXU8JWQgH0ab8ToqEoHTYLvhNTIzDzAxMeXUcpt/vaA
      VO8M9h69ImlVYtE2uWXuK9LiWyE19BEzHCli39Ervm9mvCiihu+F1CjlCvi/v1zGzsS/yF4K
      N8KJU2hNvK7UNg4tDSOkRrX8LcqZESzP/YfspTChKZxC6Jkhz4uo0XBC6lldvI7K0nXPyVmT
      8DBaOoY8mZataGghNbSoubp4A5Wl67KXY0pTOIWm1iTC3ad8J6GeQEgTVBC0JmAKoY7DaHlm
      yBfpmIRASAI0QQFwkVSTrzmcQkvH4SciNoaARgIhHVIt1zbeV5eub/x37fE0gHWslZ9uLTVv
      bEiv1+R78nMji1ePQMgApfDMgG5AYxAIGaAUgZABShEIGaAUgZABSvH/t4Cd/ZJPt3EAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dynamic Map' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nKy9WbCkyXUe9mX+e2137+57e5vpmenZV4BYBiQWEoQIkCIhkkFRkB1hh+1w
      KPwgPzjoCPuBerUfJDv8aNoK2zIphyRSlESYAAliG2CwzAyI2QfT3TO9Tfftu9b6r5nph6z8
      K/+szKo7pE9ERVX9Sy4nT5485+Q5J8loNBK+78MFnHOMx+P6vxACAEAIcb7jglarBc/z6nJU
      GVVVgVKKqqrAGENVVUiSBGa7hBCYTCbgnNftcLWFcw5CiPXeSfugt9H2n3GGklWIg6jxXhiG
      CMPQWT5jDIeHh9jc3HQ+U5QljvrHAASiIIJH6cK2WuvhDEVVTtsOAAIAASFAHMWoqgoEgEc9
      MM7he95cH/W+A5jDB2MMlFJQS/uiKEIYhhgMh8iKrH7fpz48SsE4B+MMjHPZzzBCp9VGnudg
      jDXqopSi1Wr9jejOBWVZwvd9H1EUzd0UQqAsS+R5XnfOhoRFxKfuCyHg+z5arVb9TFEUIISA
      MQbOeT0xCCGIoghJkjTqFUJgOByCEAJKaWMC6G1R1z3Pa/w3f7varupT91TdajKpclQ7Aj+w
      IpYQgm63a8XNcDjE1taWc5IIIXA06IOL2SS2EZjJBEyclKwCn8OTJLTN9Q1wwXHc76OqKniU
      1m3hQtT/Vf8LVtYTvYGbelI1xxsAFG11AUz20/pewUpQTpCEMQL4yMoCFauQ5hmKqsTm2gYg
      BPI8r2mp0+kgCOZx7QLOORhj8H1/DsdCCIzHYxRFgTnWr2Z1lmXI89xJ7CYn0K/b7pmTLAgC
      TCYTxHGMOI7BOUdZlvVqYIK6p5dvI279v35fXxH0Cco5ryeUEGJusgOwtsfWd/Uc5xxhGFqf
      5ZyDc75wMNMsQ17kskxCa+5vW/VshA9I4pectfk8AOR5gTt7uyAgOLN1ClwIHBwcTB8EKEjN
      lNR7kT/rj84QPCoZF+NsupIwQKDxbhgEoJSCa+3hWpO54HUbOefYPzrA9tZpJEnyN5Y40jRF
      nufodDpzY1FVFYqiAAA5AepZXhT18mND6rLG6O8oYhJCwPO8RiPU6uL7PrzpsptlWc05GWM4
      OjpCt9utxSA1GRUR6USp6tUJWwfzus7J9Wt6WXr7XWKB/q5a5drtds15TNyoVazb7S4Uz/qj
      AYQQiIKwwZnNshRRmX3jnKMoS2d7BUSN66qqkOVZPckICAidMRCd2M026NfURFDvAxpDEByC
      N+nJn674eVk0JoYqezgeYW1l9W8s8rRaLYRhODcOgBRBVT01FRVFgclkgnKKOJ1DLiMCU6TQ
      ERbHMSilOD4+xmg0wnA4RJqmctmdEv94PK6XO0AijhCC0WhUy/yq0ar8RZNRv6fEB9fKpE8q
      l5ikrygmY9BForIs0e/36/psiC/L0ipyKkizDEVRIPB8hH4A35sNoG0FNq8JIcAFR6/bRa/T
      BXUQr4JiKuaqZ2Yyuf1523VdPFR9932/XuWqikGgOaFCP0BRlShZNVeGEALjycRZ70mAEIIg
      CJwMUbXDVw9HUQTP85Cmac0d1D2zw4uITycW1SEl75dliTAMEccxCCHIsqwmCp3jqjKiKEIU
      RRiPx1aRxtQFFnELc7DMezrxzym7U0XP9Y7+fDBd7s1nhRDo9/tYWVlxcn/OOQ6PjyCEQDDl
      XDbGY65W+vsAkBU5OKbts5Shv388OEYcRI1VhcA+0cz6lJIdeD486tX9VjqcqmM8GTfqDzwf
      jHPkZdEoWx8jxqUx5MPI/SeFqqpmeore0SAI4Pt+rSCYsEj00QlY75ROPJxzFEUBz/NqTqGI
      X903iX8ymdQimS6jmwPKOAMlTcIzRSWzzepb1w1UefqAm2XYxCkFuuxrtkUNqAuPx4M+Kq70
      HLfoYxKlrpSnRQ4uBHJj/Eympf6H/qw9nHMQEAiIORzo/VXXirIEExwVy+FRD+0kQa/ba4gd
      eZFjNBnXdXqeB496SPOZVUhfRRUoWvz/G3SabIhA+gysqsr64qJrSnZfBpxzTCaT2rpUarKq
      TkxlWSLLMrTb7VqTt3ExVeZgMsZe/wjZVHlUzyxbRvVy9YmgT4xFIoR6r91uI47jOfFG4XV3
      dxdbW1tO4uecY5KmgJDl0QXipm0lFkLUZsWT9jvwfFAiCaGcGh/MPjPOkVdFrag26tbwFoUh
      Vnorc0Sb5c3xCL0ARVXU5bvMu2u9lb+x/H8SUMyuVoLH4zHKsoTneTXHtcmX6rf5bXJbXfxR
      oJdZFEWD+5uESCmtxaMgCFAUhZWbK+5fVAWEAAbpGCWr0IlnNmMbMej3zLbbLEH6O/pKoZ4L
      gsAp2xdFUXN+16COxmMwzuB7HiI/dIo+rnERQtQ2f71tOpjjFwWhc0Ipq45fm5MlveurcBJG
      KFkF3/Oxtrpam7J1aMUJyrIEFxx5XkgrEYBWHNerDQCUVYWSSdGk2+4gjmIrnv62QAiB53nN
      CVCWZU2opqlRIWYRMQF2U6HJoWzLqotbtdvt+p3RaFRzJ9uzuaa4CyHgezN5lDFmHRi9fpOg
      1IQwv1Wf9L4qUc0mbinC3N/fx87OjpP4GWcYjoeghKIVJY13XfK/eY0LjorNr9yu93zPb7Q3
      8H1UU2IG0NADdC4thCJZCUkUo9PpzOFYbWT5vo8wDBH4ATjro6hKJGFcl0+mewhK4SeU/K2s
      PycFVb4vhDRB2sAkYP1FHVy7rkqU0JGjy/K61UfdU2UMh0O0220Mh8O59jTqEHzKOQBAvd+U
      yV3t1evUdRhdzzCJ32yn6p9Trj8+xurqqhN3QgiMRiNUVYVW3GrU49IBbMxmkmV6t519rrn/
      dAPPZUSgRO7UmiJKXff02Xa7PTe+SsQFUIuvaZqiKAsEXtAQ73TaiqOoNpCYUJYl0jStTeeL
      dtqXQRzHSNNUmquzLKsJ0aYo6YqtDVk2Lq+IxhRrTKVSl7ltHJ5SWos/Zr0KhACKspCKG2aK
      tw1shGXuJ7iI1KUHFEWBOI6tdn+l9K+uujlaWVUYjEbwPX+e01qI3dR9CCGoOKuJ37VK6tfV
      ppbZL6UP6PWYzwghan2g3Wo3+q2IP8uyhi4HSHs/pR5Czaqj00aSJE7iV3qjEokBydiUouz7
      foOmloFyVUnTFL658+ri9qbcr4O+YWSWoYMury4rUz1XGhs65oB4lKIdtzBMx/W9ijMr59br
      ctn9bW02269fc222CCFwdHSEtbU1p+wvhEB/OADjDHGczE1+81kFug4iIBmAiZ84jKaWIIE4
      ipEVeV1GMOXKapJKEUqAwCR8oGKsNsnOKgGY4PB9v4EPZbgwccQ5n/pMhXM4BaQY6SL+oihq
      M7jeP+VCk+d5zSiCIJDi1gJLmw5BEMB3Kbo62AbetSrYRAudm5l16IRoTojhcGhVRJdxqaIq
      UXGG0OAKruVe75NLxrbdU1YfK5c8gctDWZaYpBNQQkAJPRGezVW1rEoIAJ12uzYDR2GEluFG
      cHB0iOF4hDiMrPUosYQLUW+eMcbrHVsdF5RS+NRvEJri/jadJa/kvpLv+XNjRilFkiROsWc0
      Gs09r+NGlyLyPEdRFIii6ESOc57nSR1AL0w1etGy75JDXRNI3TPBplzrYpLSIXRObnN36CQt
      BL6P/ngkt92ng7isDXp7XcTvarMaDHPXV0324XCITqezkPsfDweqIXMcU1e+zYFu7KtUJVZ7
      K+h15h3vdNzmhdzt9alnXYVneBXgAqCA0xQrhJjj2P3hAEVZ1lYjBUVV1ns0Ol2pZ1qtlpWW
      qqqqid+sW33bygNQu/MolxMXEEJm+wC6DKVXsky0sXErm+hkPqPumVzfXCVcv80yQz9Ar9Vu
      lK233Xxer9dEoKv/Jp5cZk/l2BfHblNemmdIs1SWBbdlzGQSOmNQZsMkTpz16JBMub/qh1ku
      VGscDBCQFisO0eh7URYYTyZzCrMQ0qtU36DU+6a7S5jv6bv/tra4xkxBVVUYDodzfkYmNDbC
      TKIwQVdWXaAjT2+8rWzdr9/1rd5RHbFZXHQili7KPhwLUQ06ck0id3EWvb1qq9/F/Zc6vA0G
      9X1fi5FQ37Y+6vcE5ARQtvpFoPZblMOarc/1ykukgdI1zh71sNpbaazKh8fHCC1ux7I8iiSM
      EE71Bb1vNjFFCIHJ1B3H7Lv+3xwXvV/qd1VVmCzxKaongCmv27i5y86tl2FalGzP2cozxS/b
      s0oEMtulno+CEBvdFay1e/VSvEyssRG6CSbXXGSGU7LoQoe3PJOWKyFACUU4NUmaq6HeLhPP
      eSHfDwI74en96w8HjTr05xljKI2df5N5FdVswzKKogbXLssSeZEjLXJUhvVNaOVxITfqdOK3
      Wc6GY+kAuciqYzIKW3yI6kNRFFbPBgXUxXFdXNtEkH7N/LZNIhvXsYHqmE4AughgLm3VdPea
      EuoMmDHb6uqL7Vm9HXEczz2vyrh3714d6eUavOFoWA9ePN2NteHaZErqHuMMbGqKLMoSWW7f
      xwGkK0JRFrUYYnJhSmntr6/KL6qy1qWEEAimymuSJHVQk7pXakStb8QxzjHJU2RlgbKqULGq
      EaPgEn3SNK1FKd0T2SaKc+OaTbLwPG+hT5FvIlf/byMKm3jgIiCzUTazpCJqmwhk65yNY1es
      QlYW8KmHOJyPWnJxSLPf5nX9vypThfnZwHT0s0GWZ8iLApQQxEF0oug2s406R+ac497BPpI4
      Rq/dbaw8ivvrrhW2CW/i2qMUQgCUSlEr8IPaJ8vWTlVGxVltlVLlVaxCqZWdlznaSXtOmijL
      UuoRlr0IV31ZkSEJZ3qWbjwA5CRbpgjTZRsIJrdc9KwSUUwuI8Rst9S2urhWH5MQbZNOPkNB
      ibT/T/Ks9jexgb5y2CaJtFq4FSdlsrPJ/vv7+0sd3g5qd+fA6Qhmk4vV9Woqspjybppl2D3Y
      a3iBTrIUwtgBNhmIS873PW8akkkbgUlz+IgTrPZW6tiOvCpRTD8+nYW5qnoY53NiW1EUGAyH
      4EYcsAsfClpRMkcfiqH6vl+HpC5ShH39RbMg89v229ZI1WGT65vlLeqojXPbVh5ARhdREmOS
      ZxAQSIsc7SipkaGDOeF1IlJuFco/Xm+nkn1trhVCCBweHmJ9fd0p+gDAOJ3UvlYzJzM3ngHp
      2884RxgECDwfBSutbVcwHA0Rrq1L7j8YIPTcXNtcZcwx4UKgo8Vm24AQgl6ni267I5MElBWK
      skB/OECleaZSIu39cRihrcWGl2WJwXAIaYC1MyXb6myLU1dxCOqZPM9rfaLb7VoNKI14AJtc
      C7hDDXVk6g1xuTaY91XZLncEs05bXfo7rShGUZU1Z10WMGMilk376Rk7257nOTdW1Kq3zOwp
      hMBoPJ6W7zVMgzqe87KoxTg23UGVooN0SbaFD+owTifTcEhR295NQjffdeHbp4vlZx3kpPbh
      ez6SOEY7aeGof4w0z0Apxdb6xpyHp4z/PURRFkjCCJ62R3GSOGy9vZ7nIY5jTCaTOgBLxxVj
      DOPxeE6U881Czd+qIhfnNzdrgKZzmxnlpcpTv20ysI0rmqIPFxwenbf0RMF88LZttbEhtWRV
      vWyrdkZRZA2p1Nuiiz4uRpFmKcqqBCWkYbY0J7wifrXJVd8Dqa0sNj1IB1kPRRg2Hd5sE8HF
      pNR7jLE5hVXFG4cLdrl938fm+gbSTDqwhUFTbxJC4PD4qHbjKBmbGTAwH/ij90O/piAMw0ZI
      r078Qoh6U20wGNQZJggh81khbOKQWbnZAJei6RJ5bFzIVrYNAaNsIkWBqkTJGHpJ22nyNJW7
      Re1TVpXAm/m3qFQursmv6vA092sbcM5x2D+eBrl7DadNG/dV9UR+gLyaMRml2ygRgFLaMPHp
      eFKWGxeuXWNsMhzThFivigv6q5fbSlpz15UuNEknAKQIGwfhjPuTplHENdFVWVlVwA8CsKlu
      tOh59U7NrPWOLZLRFTJtYol5XXnofVgw5XtzoywtMoyzFP3xUE6AqsThqN+wiuj90cs1QSFb
      fRjn8KnXIEi12WW2TX9/d3fX6fBWi0dVBaHKt7TJFGtUWZ7nIYkixGFY5whSOkgcRTi1sYn1
      1bW5vumBLC7Q26tHwOk4IYTM2dEJIQgdutBJQAiBo/4xJqncoPKohziInPhztRmQrvBpKZ3h
      xumkYYDR31HfQoiaNmsJxCzY5AAfFgghtbJolqt3zOTOtomlRI86esfza2euVhSDEorID2qX
      ADNjnItjm4iRewi83iwSQtRJAkyE6qAUWpfZU/VrMBzMJdBqtBNuEY1g6u4MyCwPU847SVPs
      7t3DaJq1T2daURDMEfciXJv7LSZTW+ZOcFJQYs94yvkl8Tej0up+L2AQqiwIuRIRAP50RVxk
      5CBExqAPBoMZTdkG+KRysw3UBDDTKf5NJ5QqE5AB3KEfgHFe29EJIfK/plTbJp2r3IoxFKxE
      6M0IVGWucIHC2d7eHra3t531CCFQlAUmWVrbq2248KibmzLOUTGGlW4PrTjBcDxq3GO8Gfzu
      ETqnTJ50LF3PL4v1LsuyTqQFzLurCCEwGA4wHI8ahgbdhq8YnUm45sTU2wmgzlbHDTp2GW4I
      IQ0HvIacskxsWAaqcJXuRF9NbCZRvc4Po7B6xixXOS31a3r5pkKl1ykg4FMPHqW1L7luwbJx
      TEB6HNr8gRQIITMz7B8d1ANuEr8QAiDEGcglhHQf6LY76LY7dV0m7hQQkFox1ftp9tl2zRUH
      LYTM0aOMASYwxubc1rvdbr1ZKITA0fERhpNxo/+Keemgb2KpNtomhX5/1o4KhDZNywpUekjO
      OahHEUWRjCcQwp4a8W8jBnme18gnqjfWpWeYE2+Z4uwCG4HZJoReZlHKDRtl6jTFHpsIJYR0
      eFN2fxcMxyMZE+DN++vUgyv/WN/n0ywPSskejcdzvlY68Qa+P6dAmn3Qn1ewyFzMOENe2bPM
      KTyYhJllGXzfryPi0ml4pCo38gPnONmCq/Rv2xgXVdlI72JCXuazHKmV3CtR/329AhM5LiL4
      MGCWr9fh4vi2CWibJPp/9TE5vrnC6NcZb/oP6W1dtBqprHaLXB5UsAshpJHdTe/Poog1AMin
      yr3ME9pFGARY661AANPM0U0IpkRgk/dtDMiGL7M9RVU6+5mmaWNCqmeqqmrI2dF011tlraj4
      zOSp99k2pmbbbO0IPHsSsUaftcCrqmKoOJM+UmanbTqBjVO7lEMhhFV5tP3+MHrGIjnb1Rbb
      e7ZJ7U9TweRaDhvXu0IIDAaDpT4mk6mvvww+t3M0m2erqqdirDZ7UkJxcHyIewd7CMMISRxj
      rTcLtBdCxkPYAliW4WcRVNM0ie1kfhOQc440Tev/JtPQDRKUUgSej1YoDRcEpNYF9Ha6mI7e
      fiFmxg4X/swyQ0/uokMIECL3SfIiRxiE9n0AV0HLZqIQok5mpbI5mNkIdI6juKBtctgIxFb/
      ss673hNCJoPytcmqmwNdoHIm2dJu68+URVFbqiourUwebSazNXUi/V6uJY9Srs9cSHdhxljD
      A5QSmeTKjNewrX46rvVNTNN4oESLwA/Q7XTm+qg2nEx82VzcdRqIg7De3TbHyDZmtuuLRHTb
      RKKUIiQBQGQSApU8LQ7DmRnUFBvU/3a7/aEsCWYQuzlx1DU9PZ2LkJYF3+jcbZm+YD7DOAcT
      HIE3kx1VhupFdR0dHVmzPKiU8owxDEcyx49yd/CndnnGeSNfPzNMlIp4lFlXQcWqWlwbT8bI
      8qxxX5lvF+2qm6KR+W3qBVxI/WRzfcNqpXKNnW3lN8VLJbKY/TRXBNdH3bfBInqJ/BCtMK43
      JCn15n2B9AL04Adzgtg6TghBHMcNUUJvsIkI2/eyTpwEbEmq5gh2mvlMXVUehIuC2PXDPPTy
      FIcLwxB5nqMq7WccKBeIWoew9J0LIV0NyGLzsbruUQrfa0Zb2VZssx4bAemTxKMettY3G+4O
      +gTyfR/Uo+BczFmxbOKS3q56F5tVjbGy6SW2lQtYfGaDKisr8ql/UvNUImVOz9JUrgCu2aTM
      RYp4TwJ6Hh/bEqc+y6LLTHDpHzY5ctmKJYTc+Q20fDJhGKLdbi9cPXZ3d3Hq1CkrIakDPJQj
      lhACBQdujASYaJZTsqpWCHXXayFEnePI1XcTQsPXX3/HZQu34c7sq0oxoq6NJxPsHx003l1d
      WUVragpOp2lX5Kk0zY0rl8u9yiitylRBTWoMTcI3JRRbSK3+W3c5NxmtokGrN6iSRweDgTMN
      hYk0QmY5F21cyLU0m50zwbZCmLqDiShTznXpC97UW7Ldbi/NNDYej+toKBtnVRNfrRKEENwY
      Crx1WMEjAdKsQOgRXFgNazGAkOYegBCi3vV14US/pvYvbPix4WVRuQoopfA8r2YGQkgv1tF4
      NHfcEqXy3K4oiiCOjwAxs8iodrjkdUXAajVQOkfo+/WKptpa5y4yxtLmGdvQRyw4MenStykN
      +jVbjK+rUl2pUo20lWu+r8A1MGZ55jJpK8usT39OuUyriKFldXPO0e/35/J7qtVRWb2OB32Z
      K3/6/0JXWiCORjm+faUPAPjyE+s40/Hr3ev9YYFxXuHCVgeVxafJ1jfVr8Cbj6nVwcSXft1V
      h+/76PV69TN5nmM4GiIKQqfiX5bS+1StXOaqb/s29Q5CpHuLTRKwcW8d7zqYk2UZTfmmjOWS
      O23cxMZ1XZWaM9dFxK6GmnWYHTbrMKGuE9K81wplUqtl+oYQ0t1ZiT76IBBCGudNme0MiMCF
      DsFbEx0RShH08L23d/Evvv0uKibwzP0b+E8+d8nab1vZvuctdUhbJlbqUDEm3RO0JFVlWWIy
      mdQu5rZVUmeSOtPUGaEp5+uTQKc7Gy2YZakybJO7wf2XxIKoa3V6dLNTtqXLNgkIIXUG5iAI
      5lYMU/Y3G+MSp046MVzIsHVWQCqYoR/UCv4iTqEPrs27Vcn7QRBgMBhIU6QQc0vvI6cS5Exg
      PfGx05VclAuBb79xB9VUQXjt+iH2h+ew3pl36zBxQwipLT86Llz9doGOs7wqsNLuNoweY83R
      TqUv1KGqKikasXlvVrNuczwXucaoNrncM/RrLtHXtfKYIlDDG3SROKHbyOdk6SknSpIEo9HI
      2hBzyTMRpst0J/E+NNu8iPsDgIBM0KpEB9Pnx8YEhLDn9xRC5pyJogi+79cToWIMo5whq5rt
      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
    </thumbnail>
    <thumbnail height='192' name='Gender_Breakdown' width='192'>
      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
      QCjt/wHu6FBhZbLXCgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Growth in Customers' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Growth in Femal Riders' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Growth in Riders' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Static Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='164' name='Top 10 Ending Locations' width='164'>
      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
      LTMRAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='164' name='Top 10 Starting Locations' width='164'>
      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
    </thumbnail>
    <thumbnail height='24' name='Total_Bike_Rides' width='84'>
      iVBORw0KGgoAAAANSUhEUgAAAFQAAAAYCAYAAABk8drWAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAEcUlEQVRYhe2Xf0hbVxzFz0ZQWKUdjImVYqGMFVYQ4T0wRFBQQYt2qbPaZdaB3SwM50NW
      tpQN1OEfbceEZSztElAwoGM4UMpsA3GspUmtGxUdVakukbbGX+1minFEXsjZH0nqM6auHS/b
      GO8D+SP3fu8933Pey73kOZKEhmo8/2838H9DC1RltEBVRgtUZbRAVUYLVGW0QFVGC1RltEBV
      RgtUZbRAVUYLVGW0QFUmhYH60P2WHmKtHb74UHgGfZIRRXoRYkElJPsYAk9YHX74E+zxWn0R
      jOZBzIfjsxtYGv8OluYTm3vHxqccEoxFeoiiHkVvtsG5uSiBAMa+PLnZS98MtlQGxmCXKlEg
      ihALSnDi68l4Z5jpi2sUoFKyY0xpgilidaCJJquVp2ts9JIkZY50VFPqn2VQJhla5HC7kdKl
      tSSr77LrvUZaftis9ZyvYUPvcnTa1crqD3voWZyM7R1jpIOVTd9wNrqIi55OmqosnEyisOYy
      0yj1cy5Eyg9G2WmqouVxoZ+9DWWKXgOcnluIuhjpYLXUv6kx3E6jdIlxF6kJdPUKTzdYeUd2
      0fw4UC9tLQnmZBfN0gC3RypTlhOG7lh52uZNGPRuCfRul4lml3I+xO9bzHQxkTUONNWzx69Q
      dLezpnMi+mXSwipFSFsUbS2K4KO9uswSB2LFKfjJh3Hzqz5kt5zCqzrleCb2Ri7DMbSEDQDA
      Bh75I0gL+BJ+tgCgg065NjyPQdttvFZ6YEflnPJK/O64gF/WwwA2sHTDiqHd5dBvq1zBCvKQ
      l61QzM9HzsICwgBWxsdx4PBhZCTRyNwbwWXHEJaiJrDxyI9IWgC+mAmVA/XBfuoccMaBD3J1
      CXMZOGJx4lxFFtIBAOnYsz8NETkjaeNAGA+dbXi3zYl57MPRzgs4uXOeCAeD0L2ciRcUmnjg
      w8ozuggG0xD541f8th49VTeWbuCz2rfhWAAyjljgPFeBrKgJpO/Zj7SIjIyYCXUDvdqN7rFB
      vK8XIYoiRPEMhn121Iq1sG9/DRH2XMPEwUPISbJV+ObnaPUdh/XTcuxLfDZPwO24irymY3hl
      lw5AOrIMp/DGbieGt2lnIhPjGF9Q6I2O4l52NnQADuTuQyi4Gy/tigqnZxlwrDSEqalkjXpw
      beIgDsVNJDkmVER5hpLr3klOB0IkydBcP6UyE7sSj0WS5DJ7m9vpTjxHt7H1DPX3NrK6Y5jz
      QZmkzOBsP6UyicnuvR0vJXmCnfWN7JkIMnonenjeFNtn3cvJ6QBDURPsl8poUpj4RwPl7Yus
      KzZQEAQaiut41r26WSq72V7SyG+XSfJHfpIvUBASPrEbx2urSZirYfS+WqX7i3dYYRAoCPks
      fL2ZtltxDT976kt49ue44CpvWRpYmC9QMFTwo4H7VD4/+f4Vth4vZP62Xm/zYl0xDYJAwVDM
      urNuKlykOtCnR3a309Q5wb98Kf8u/h42NA1sMZ8K/iP/lMK4ej0dkpSLpzwunxmf8x5KPz6K
      F1O0f5w/AY3XsTFQksZTAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Trip Duration by Age' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
